<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: isochrones | Mountain Doodles]]></title>
  <link href="http://doodles.mountainmath.ca/blog/categories/isochrones/feed.atom" rel="self"/>
  <link href="http://doodles.mountainmath.ca/"/>
  <updated>2017-01-17T17:48:23-08:00</updated>
  <id>http://doodles.mountainmath.ca/</id>
  <author>
    <name><![CDATA[MountainMath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Interactive Isochrones]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2016/11/18/interactive-isochrones/"/>
    <updated>2016-11-18T10:22:29-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2016/11/18/interactive-isochrones</id>
    <content type="html"><![CDATA[<p><img  src="http://doodles.mountainmath.ca/images/isochrone.png" style="width:50%;float:right;margin-left:10px;">
Mapzen again upped their game by publishing their <a href="https://mapzen.com/documentation/mobility">Mobility API</a>. This is
super exciting for anyone interested in a whole range of mobility questions. A <a href="https://twitter.com/dnproulx/status/799644235720900608">question I have seen</a> is how to adapt that
to specific needs. So here is a quick example how to customize walksheds.</p>

<!-- more -->


<p>All we do is set up a quick map that computes the 5 and 10 minute
walksheds when the user clicks on the map.</p>

<iframe src="http://doodles.mountainmath.ca/isochrone.html#14/49.2775/-123.1292" width="80%" height="450" style="margin: 5px 10%;"></iframe>


<p>To get a better view you can also
<a href="http://doodles.mountainmath.ca/isochrone.html" target="_blank" class='btn btn-default'>take the map full-screen</a>.</p>

<p>Feel free to just <a href="http://doodles.mountainmath.ca/isochrone.html" download>grab the html</a> and adjust it for your needs. Please go and
register for your <a href="https://mapzen.com/developers/sign_in">free Mapzen API key</a> and replace the key in the downloaded
html file with yours. Refer to the <a href="https://mapzen.com/documentation/mobility">Mobility API</a> to customize this for your
needs.</p>

<p>Here is the relevant code to generate the isochrones:
&#8220;`
    var mapzenApiKey=&ldquo;<your api key>&rdquo;;
    var marker,isochrone;</p>

<pre><code>function httpGetAsync(theUrl, callback)
{
    var xmlHttp = new XMLHttpRequest();
    xmlHttp.onreadystatechange = function() {
        if (xmlHttp.readyState == 4 &amp;&amp; xmlHttp.status == 200)
            callback(xmlHttp.responseText);
    };
    xmlHttp.open("GET", theUrl, true); // true for asynchronous
    xmlHttp.send(null);
}

map.on('click',function(e) {
    if (marker) marker.removeFrom(map);
    marker = L.marker(e.latlng).addTo(map);
    var json={locations:[{lat:e.latlng.lat,lon:e.latlng.lng}],costing:"pedestrian",contours:[{time:5,color:"006400"},{time:10,color:"006400"},{time:15,color:"006400"}]};
    var url='http://matrix.mapzen.com/isochrone?json='+JSON.stringify(json)+'&amp;api_key='+mapzenApiKey;
    httpGetAsync(url,function(data){
        var geojsonFeatures=JSON.parse(data);
        geojsonFeatures.features.forEach(function(f){
            f.geometry.type="Polygon";
            f.geometry.coordinates=[f.geometry.coordinates];
        });
        if (isochrone) isochrone.removeFrom(map);
        isochrone=L.geoJSON(geojsonFeatures, {style: function(feature){return {color:'#'+feature.properties.color, opacity:feature.properties.opacity}}}).addTo(map);
    });
});
</code></pre>

<p>&#8220;`</p>

<p>Happy mapping.</p>
]]></content>
  </entry>
  
</feed>
