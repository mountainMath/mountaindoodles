<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: d3 | Mountain Doodles]]></title>
  <link href="http://doodles.mountainmath.ca/blog/categories/d3/feed.atom" rel="self"/>
  <link href="http://doodles.mountainmath.ca/"/>
  <updated>2017-01-17T08:27:22-08:00</updated>
  <id>http://doodles.mountainmath.ca/</id>
  <author>
    <name><![CDATA[MountainMath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2017 Vancouver Assessment Data]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2017/01/16/2017-assessment-data/"/>
    <updated>2017-01-16T19:04:19-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2017/01/16/2017-assessment-data</id>
    <content type="html"><![CDATA[<p><a href="https://mountainmath.ca/map/values?filter=[sfh]&amp;zoom=13&amp;layer=9"><img  src="http://doodles.mountainmath.ca/images/value_animated.gif" style="width:50%;float:right"></a>
The friendly folks at
<a href="http://vancouver.ca/your-government/open-data-catalogue.aspx">Vancouver Open Data</a> just
<a href="https://twitter.com/VanOpenData/status/688060388190097408">updated their property assessment data</a> with the fresh 2017
property tax assessments. Time to run the script to update the <a href="https://mountainmath.ca/map/assessment">Vancouver Assessment Map</a>
with the new data, just <a href="http://doodles.mountainmath.ca/blog/2016/01/17/updated-vancouver-assessment-data/">like we did last year</a>.</p>

<p>For now we just updated our standard visuals and computed some overall statistics. We will take a closer look at the data over the coming days.</p>

<h4>Maps</h4>

<!-- more -->


<p>By now we have a variety of maps that highlight different aspects of Vancouver real estate, and after running the import scripts they
automatically serve the newest data. Our basic
<a href="https://mountainmath.ca/map/assessment">interactive assessment map</a> offers a variety of ways to slice and display the data. It&rsquo;s
mostly focused on functionality, some of which we described in
<a href="http://doodles.mountainmath.ca/blog/2016/01/17/updated-vancouver-assessment-data/">last year&rsquo;s post</a>, as well as other posts like
the one on <a href="http://doodles.mountainmath.ca/blog/2016/01/24/work-vs-twiddling-thumbs/">twiddling thumbs vs working</a>.</p>

<p>We also have interactive views focusing on how real estate prices varied over time, for example the <a href="http://doodles.mountainmath.ca/blog/2016/04/01/on-dirt-and-houses/">houses and dirt map</a>
that separates out (inflation adjusted) values of the structures and the land, and also allows to filter by type of housing, to animate changes over time.</p>

<p>For people that like simpler maps we also have a <a href="https://mountainmath.ca/map/values?filter=[sfh]&amp;zoom=13&amp;layer=9">plain total (nominal) value over time map</a>
that allows to interactively step through the years and see how single family house values in Vancouver changed over time. Here we also
added the ability to visualize year-over-year value changes, which also hints at how BC Assessment changed their valuation
algorithm over the years.</p>

<h4>The Data</h4>

<p>The data originates with BC Assessment, which estimates land and building values of each property based on recent sales
of comparable properties. The values are pegged at July 1 of each year, with the the most recent available now being July 1 2016.
The estimates for the values do not reflect changes in the market since then. Moreover, the estimates can be quite off on an individual
property level, but are unbiased. That means that any statistics derived from a large subsample should fairly accurately
reflect actual market conditions for July 1st. Lastly, the assessed values will still change a bit as some will be successfully appealed.</p>

<p>City of Vancouver, as well as the City of Surrey, make this data available for general use through their open data portal, which
allows us to create these maps. The format of the data the municipalities are giving out through their open data portal is
different, so lazy me is only importing data from City of Vancouver. Sadly, BC Assessment does not make this data
generally available province wide for us to make province wide maps.</p>

<p>While BC Assessment makes this data available on their <a href="https://evaluebc.bcassessment.ca">eValue website</a> for browsing individual
properties and also provides it in bulk to researchers, the attached license does not allow the thematic mapping of individual properties.</p>

<p>The motivation behind the map was to understand the building stock, so in the maps as well as the summary statistics below
we filter out parks and some other properties.</p>

<p>The new city dataset does not include the 2017 tax levy, so our maps still only show the 2016 tax levies until CoV updated their dataset.</p>

<h4>History</h4>

<p>In the spirit of <a href="http://doodles.mountainmath.ca/blog/2016/01/17/updated-vancouver-assessment-data/">last year&rsquo;s post</a> we ran some
quick summary statistics to break down the numbers by neighbourhood. Instead of listing the most recent land and building value
increases by neighbourhood we stuck everything into an interactive graph for the entire time span between 2006 and 2017 tax years.
Use the dropdown menus to drill down
into city neighbourhoods, view values for all properties or just residential properties and display as total value or year-over-year
percentage change.</p>

<p>The last year again
saw an huge increase in property values. For the City of Vancouver land values were up 35% and building values 10%, with the land
value increase setting a record for the timeframe for which we have data. The increases become even more pronounced when we zero in
on residential property only.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<select id="nbhd-select"></select>
<select id="keys-select"></select>
<select id="type-select">
<option value='total'>Total Value</option>
<option value='percent'>Percentage Change</option>
</select>
<div id="graph" style="height:200px;max-width:640px;" data-lines="/data/detail_history.json"></div>
<div class="legend no-margin">
</div>
</div>


<p>When looking at all properties in the city, the increase in land
value year over year was 21.4% ($45.2bn), while overall building values increased by 7.3% ($5bn). Hover, click or touch
the points in the graph to get the values for the corresponding year.</p>

<script>
var ready_for_graph = function() {
    var d3lines=[];
    var padding = {top: 20, right: 20, bottom: 30, left: 90};
    var prevChartWidth = 0, prevChartHeight = 0;
    var updateTransistionMS = 750; // milliseconds
    var jsonData, xScale, yScale, line,neighbourhoods;

    var currentValue='City of Vancouver';
    var currentKeys=['land','building'];
    var currentModePercentage=false;

    var hash={
            land: {label:"Land Value", color:"green"},
              building: {label:"Building Value", color:"blue"},
              res_land: {label:"Residential Land Value", color:"darkgreen"},
              res_building: {label:"Residential Building Value", color:"darkblue"},
              land_p: {label:"Land Value Increase", color:"green"},
              building_p: {label:"Building Value Increase", color:"blue"},
              res_land_p: {label:"Residential Land Value Increase", color:"darkgreen"},
              res_building_p: {label:"Residential Building Value Increase", color:"darkblue"}
                };
    var keys=Object.keys(hash);

    var symbol;
    var prefix;
    var numberFormatter = function (y) {
        return '$' + Math.round(prefix.scale(y*10))/10.0 + symbol;
    };

    var graphs=d3.select("#graph");
    var div=graphs[0][0];
    if (div==null|| div.childElementCount!=0) {return;}
    var data_url=div.dataset.url;

    // create svg and g to contain the chart contents
    var baseSvg = graphs.append("svg");
    var chartSvg=baseSvg
        .append("g")
        .attr("class", "chartContainer")
        .attr("transform", "translate(" + padding.left + "," + padding.top + ")");

    // create the x axis container
    chartSvg.append("g")
        .attr("class", "x axis");

    // create the y axis container
    chartSvg.append("g")
        .attr("class", "y axis");
    var line;
    var largest=null;
    var lineData;
    if (div.dataset.lines) {
        d3.json(div.dataset.lines,function(error,json){
        jsonData=json;
        neighbourhoods=Object.keys(jsonData);
        var keyHash={all:{label: 'All Properties',data:['land','building']},res:{label: 'Residential Properties',data:['res_land','res_building']}};
        var keyOptions=Object.keys(keyHash);
        d3.select('#nbhd-select').selectAll('option').data(neighbourhoods).enter().append('option').attr('value',function(d){return d}).text(function(d){return d});
        $('#nbhd-select').on('change',function(d){
            currentValue=this.value;
            updateChart({init:true,keys:currentKeys,data:jsonData[currentValue],percentage:currentModePercentage})
        });
        d3.select('#keys-select').selectAll('option').data(keyOptions).enter().append('option').attr('value',function(d){return d}).text(function(d){return keyHash[d].label});
        $('#keys-select').on('change',function(d){
            currentKeys=keyHash[this.value].data;
            updateChart({init:true,keys:currentKeys,data:jsonData[currentValue],percentage:currentModePercentage})
        });
        $('#type-select').on('change',function(d){
            currentModePercentage=this.value=='percent';
            updateChart({init:true,keys:currentKeys,data:jsonData[currentValue],percentage:currentModePercentage})
        });
        lineData=json[currentValue];
        var domain=[null,null];
        var range=[null,null];
        lineData.forEach(function(d) {
             d.date = +d.date;
             if (domain[0]==null || domain[0]> d.date) domain[0]= d.date;
             if (domain[1]==null || domain[1]< d.date) domain[1]= d.date;
             keys.forEach(function(k){
                d[k]=+d[k];
                if (range[0]==null || range[0]> d[k]) range[0]= d[k];
                if (range[1]==null || range[1]< d[k]) range[1]= d[k];
            });
        });
        xScale=d3.scale.linear().domain(domain);
        var toAdd=(range[1]-range[0])/10;
        range[0]-=toAdd;
        range[1]+=toAdd;
        yScale=d3.scale.linear()
            .domain(range);

        line = d3.svg.line()
            .x(function(d) { return xScale(d.date); })
            .y(function(d) { return yScale(0); })
            .interpolate("linear");
        xAxis = d3.svg.axis()
            .scale(xScale)
            .orient("bottom")
            .tickFormat(d3.format("d"));
            //.ticks(5);
            //.tickValues(domain);

        yAxis = d3.svg.axis()
            .scale(yScale)
            .orient("left")
            .tickFormat(numberFormatter)
            .ticks(5);

        prefix = d3.formatPrefix(range[1]);
        if (prefix.symbol=='K') {
            symbol='k'
        } else if (prefix.symbol=='M') {
                symbol='m'
        } else if (prefix.symbol=='G') {
            symbol='bn'
        } else if (prefix.symbol=='T') {
            symbol='tn'
        }
        updateChart({init:true,keys:currentKeys,data:jsonData[currentValue],percentage:currentModePercentage});
        });

    }


    function updateChart(options)
    {
        var lineData=options.data;
        var init=options.init;
        var keys=options.keys;

        lineData.forEach(function(d,i) {
             keys.forEach(function(k){
                d[k]=+d[k];
                if (i>0) d[k+'_p']=d[k]/lineData[i-1][k]-1;
             });
        });

        if (options.percentage) {
            keys=keys.map(function(k){return k+'_p'});
            lineData=lineData.slice(1);
        }

        var domain=[null,null];
        var range=[null,null];
        lineData.forEach(function(d,i) {
             d.date = +d.date;
             if (domain[0]==null || domain[0]> d.date) domain[0]= d.date;
             if (domain[1]==null || domain[1]< d.date) domain[1]= d.date;
             keys.forEach(function(k){
                if (range[0]==null || range[0]> d[k]) range[0]= d[k];
                if (range[1]==null || range[1]< d[k]) range[1]= d[k];
            });
        });

        //if (options.percentage) domain[0]+=1;

        var toAdd=(range[1]-range[0])/10;
        range[0]-=toAdd;
        if (!options.percentage) range[0]=Math.max(0,range[0]);
        range[1]+=toAdd;
        yScale.domain(range);
        xScale.domain(domain);
        var formatter;
        if (options.percentage) {
            formatter=d3.format('.1%');
        } else {
            formatter=numberFormatter;
        }
        yAxis.tickFormat(formatter);

        var legend=d3.select('.legend');
        legend.empty();
        legend.selectAll('.item').data(keys)
            .enter().append('p').attr('class','item')
            .html(function(k){return '<i style="background:'+hash[k].color+'"></i> '+hash[k].label+' <span style="float:right;margin-right:10px;" id="'+k+'_value"></span>'});
        //legend.selectAll('.item').exit().remove();


        // get the height and width subtracting the padding
//    var innerHeight = window.innerHeight - 20;
        var innerWidth = window.innerWidth - 20;
        var divWidth=$(div).width();
        if (divWidth==0) divWidth=$(div.parentElement.parentElement).width();
        var maxWidth=parseInt($(div).css('max-width'));
        if (divWidth==0) divWidth=innerWidth*0.8;
        if (divWidth>maxWidth) divWidth=maxWidth;
        var chartWidth = divWidth-padding.left-padding.right;//960 - margin.left - margin.right,
        var chartHeight = $(div).height()-padding.top-padding.bottom;//500 - margin.top - margin.bottom;


        // only update if chart size has changed
        if (true || (prevChartWidth != chartWidth) || (prevChartHeight != chartHeight)) {
            prevChartWidth = chartWidth;
            prevChartHeight = chartHeight;

            //set the width and height of the SVG element
            chartSvg.attr("width", chartWidth + padding.left + padding.right)
                .attr("height", chartHeight + padding.top + padding.bottom);
            baseSvg.attr("width", chartWidth + padding.left + padding.right)
                .attr("height", chartHeight + padding.top + padding.bottom);

            // ranges are based on the width and height available so reset
            xScale.range([0, chartWidth]);
            yScale.range([chartHeight, 0]);




            if (init) {
                // if first run then just display axis with no transition
                chartSvg.select(".x")
                    .style({ 'stroke': 'grey', 'fill': 'none', 'stroke-width': '1px'})
                    .attr("transform", "translate(0," + chartHeight + ")")
                    .call(xAxis);

                chartSvg.select(".y")
                    .style({ 'stroke': 'grey', 'fill': 'none', 'stroke-width': '1px'})
                    .call(yAxis);

                chartSvg.select('.x.axis path').style('display','inherit');
            }
            else {
                // for subsequent updates use a transistion to animate the axis to the new position
                var t = chartSvg.transition().duration(updateTransistionMS);

                t.select(".x")
                    .attr("transform", "translate(0," + chartHeight + ")")
                    .call(xAxis);

                t.select(".y")
                    .call(yAxis);
            }

            var sourceData=lineData;

            function addSeries(key){
                var g=d3.select(this);
                var color=hash[key].color;
                var label=hash[key].label;
                var className=key;

                // bind up the data to the line
                var lines = g.selectAll("path.line")
                    .data([sourceData]); // needs to be an array (size of 1 for our data) of arrays

                var valueFunction=function(d){return d[key]};
                var yFunction=function(d){return yScale(valueFunction(d))};
                var ff=key[key.length-1]=='p' ? d3.format('.1%') : numberFormatter;
                var formatFunction=function(d){return ff(valueFunction(d))};

                function tooltipFunction(d,el){
                  var key=d3.select(el.parentElement).datum();
                  var ff=key[key.length-1]=='p' ? d3.format('.1%') : numberFormatter;
                  return d.date + ': ' + ff(d[key]);
                }

                 var line=d3.svg.line()
                      .x(function(d) { return xScale(d.date); })
                      .y(yFunction)
                      .interpolate("linear");

               // transistion to new position if already exists
                lines.transition()
                    .duration(updateTransistionMS)
                    .attr("d", line);


                // add line if not already existing
                lines.enter().append("path")
                    .attr("class", "line")
                    .attr("stroke", color)
                    .attr("stroke-width", 2)
                    .attr('fill','none')
                    .attr("d", line);

                lines.exit().remove();

                // bind up the data to an array of circles
                var circles = g.selectAll("circle")
                    .data(sourceData);

                // if already existing then transition each circle to its new position
                circles.transition()
                    .duration(updateTransistionMS)
                    .attr("cx", function (d) {
                        return xScale(d.date);
                    })
                    .attr("cy", yFunction);

                // if new circle then just display
                circles.enter().append("circle")
                    .attr("class", className)
                    .attr("cx", function (d) {
                        return xScale(d.date);
                    })
                    .attr("cy", yFunction)
                    .attr("r", 4)
                    .attr('fill', 'transparent')
                    .style("stroke", color)
                    .style("stroke-width", 8)
                    .on('mouseover',function(d){
                       d3.select('#'+this.classList[0]+'_value').text(tooltipFunction(d,this))
                    }).on('click',function(d){
                       d3.select('#'+this.classList[0]+'_value').text(tooltipFunction(d,this))
                    }).on('touch',function(d){
                       d3.select('#'+this.classList[0]+'_value').text(tooltipFunction(d,this))
                    }).on('mouseout',function(){d3.select('#'+this.classList[0]+'_value').text('')});
                circles.exit().remove();
                }
            }

            var selection=chartSvg.selectAll('g.series').data(keys);
            selection.exit().remove();
            selection.enter().append('g').attr('class','series');
            chartSvg.selectAll('g.series').each(addSeries);
    }

    // look for resize but use timer to only call the update script when a resize stops
    var resizeTimer;
    window.onresize = function(event) {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function()
        {
                updateChart({init:false,keys:currentKeys,data:jsonData[currentValue],percentage:currentModePercentage});
        }, 100);
    }


};
ready_for_graph();



function resetImages(){
    $('img').each(function(img){
        imgsrc = $(img).attr('src');
        if (imgsrc.slice(imgsrc.length-4)=='.gif') {
            $(img).attr('src', '');
            $(img).attr('src', imgsrc);

        }
    });
    setTimeout(function(){
        resetImages();
    },25000);
}
setTimeout(function(){
    resetImages();
},25000);

</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What's up with RT?]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2016/08/04/rt/"/>
    <updated>2016-08-04T13:18:51-07:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2016/08/04/rt</id>
    <content type="html"><![CDATA[<p>RT is Vancouver&rsquo;s zoning for duplexes. Over time, various areas have been zoned to allow duplexes. Examples are
Kits Point, much of Point Grey Road reaching up to Broadway, much of Granview-Woodlands, parts of Mount Pleasant and many
other areas.</p>

<p><a href="https://mountainmath.ca/map/assessment?filter=[zone_RT,residential]&zoom=13&lat=49.245&lng=-123.1166&layer=4&mapBase=2" target="_blank"><img  src="http://doodles.mountainmath.ca/images/rt_teardowns.png" style="width:50%;float:right;margin-left:10px;"></a>
Recently I have had some interesting conversations <a href="https://twitter.com/fixbced/status/748196970783637504">on Twitter regarding RM-6</a>
and over BBQ dinner about RT-7. Then the
<a href="http://vancouver.ca/home-property-development/grandview-woodland-community-plan.aspx">Granview-Woodland plan</a>
passed by council, and it contains a curious provision of reducing the outright FSR for the
RT-zoned properties from 0.6 to 0.5.</p>

<p>All of which got me thinking. What is RT supposed to accomplish, how does the diverse RT-zoning rules influence development
and how is RT overall performing?</p>

<!-- more -->


<p>To make things complicated many RT zoning rules contain provisions to allow for higher FSR, and more than two units,
under the &ldquo;heritage preservation&rdquo; program. Most people like the multi-plex developments that come out of this process,
but the road there is quite adurous. Permitting takes a long time and is marred by uncertainty. Those projects are
done by small developers, that are ill-equipped to deal with risky and drawn-out rezoning processes.</p>

<p>These would be great projects carried out by small developers that lead to gentle and affordable density,
as this kind of re-development does not require land-assembly and does not lead
to crazy land-value lifts that require CACs to claw back some of that value rise
<a href="http://doodles.mountainmath.ca/blog/2016/04/01/on-dirt-and-houses/">as we explained before</a>.</p>

<p>We have some ideas what a refreshed RT (and RS) should look like, and there are
<a href="https://pricetags.wordpress.com/2016/07/29/open-letter-on-the-downzoning-of-grandview-woodland-rt/">some efforts to push for changes</a>.
We leave the details of this to the experts and take a little field expedition to
see how the different flavours of RT (and RM) perform in data.</p>

<h3>Why RT?</h3>

<p>One central question to ask is: What is the purpose of RT (or any) zoning? The initial idea was to allow higher density
than RS, with two stratified properties on one lot. But since the creation of RT the RS zoning has undergone significant
changes and allows, in many cases, for higher FSR and higher unit count, although not stratified. In much of RS three
units are allowed on each lot, the main house, a secondary suite and a laneway house.</p>

<p><a href="https://mountainmath.ca/map/assessment?filter=[zone_RT_RS_FSD,residential]&zoom=13&lat=49.245&lng=-123.1166&layer=5&mapBase=2" target="_blank"><img  src="http://doodles.mountainmath.ca/images/rs_rt_land.png" style="width:50%;float:left;margin-right:10px;"></a>
So how does RT perform in the wild? There seems to be little effect RT vs RS zoning has on land values. The
<a href="http://mountainmath.ca/map/assessment?filter=[zone_RT_RS_FSD,residential]&amp;zoom=13&amp;lat=49.245&amp;lng=-123.1166&amp;layer=6&amp;mapBase=2">boundaries between RS and RT</a>
can&rsquo;t be discerned from a
<a href="https://mountainmath.ca/map/assessment?filter=[zone_RT_RS_FSD,residential]&amp;zoom=13&amp;lat=49.245&amp;lng=-123.1166&amp;layer=5&amp;mapBase=2">land value map of all residential properties in RS, RT (and First Shaugnessey) zones</a>.</p>

<p>How good are RT lots at realizing &ldquo;zone capacity&rdquo;, that is how many of the historically SFH get turned over into duplexes,
or in some cases multi-plexes (through the heritage presercation program)?
That depends as the following graph shows.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_sfh" style="height:200px;max-width:640px;" data-url="/data/zone_sfh.json"></div>
</div>


<p><a href="https://mountainmath.ca/map/assessment?filter=[zone_RT]&zoom=13&lat=49.2581&lng=-123.1166&layer=20&mapBase=2" target="_blank"><img  src="http://doodles.mountainmath.ca/images/types_rt.png" style="width:50%;float:left;margin-right:10px;"></a>
We can also study this by mapping out
<a href="https://mountainmath.ca/map/assessment?filter=[zone_RT]&amp;zoom=13&amp;lat=49.2581&amp;lng=-123.1166&amp;layer=20&amp;mapBase=2">all residential lots in RT zones</a>,
and color them depending if they are single family lots, duplexes or multi-plexes.</p>

<p>Some RT areas are essentially indistinguishable from RS areas, they are almost entirely comprised of single family lots.
A good example is the
<a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-4,residential]&amp;zoom=14&amp;lat=49.2733&amp;lng=-123.0646&amp;layer=20&amp;mapBase=2">RT-4, most of which is in Grandview-Woodlands</a>.
And being in RT rathern than RS they often don&rsquo;t even get the benefits of a laneway house. Coach houses, which are legal
in many RT areas and could be stratified, come with such onerous side setbacks that they are very hard to build on
regular lots.</p>

<p>There is a lot of untapped &ldquo;zoned capacity&rdquo;. Similarly, some of the
newer RM zones show little appetite for realizing &ldquo;zoned capacity&rdquo;, possibly due to the added difficulty of having to
assemble lots to do so.</p>

<p>One can argue about whether this is good or bad. Or one can look at the variation between the different types of RT and RM
zones to see what causes the difference.</p>

<h3>Downzoning</h3>

<p>To understand how downzoning works we want to consider two different types on analysis. One is to look at what happened
after RS zone was changed to reduce site coverage in the 1980 in response to concerns about &lsquo;monster homes&rsquo;. We ran
an analysis using LIDAR data to understand the effect on the physical form of SFH and found that while site coverage
indeed decreased sharply, the <a href="http://doodles.mountainmath.ca/blog/2016/03/05/physical-sfh-form-over-time/">bulk of the building remained unchanged</a>.
and the rule change seems to have done little in easing concerns about &lsquo;monster homes&rsquo;, it simply changed some of the
parameters determining what &lsquo;monster homes&rsquo; look like.</p>

<p>Another way to look at the matter is to compare how re-development happened in difference zones. This is very hard, since
there are many factors other than zoning that determine if a building gets re-developed. To get some idea we compiled two
numbers for each of the RS, RT and RM zones (ignoring some of the delicacies in the zoning code and lumping together all
sub-zones with the same leading number. So for example we lumped RT-4, RT-4A, RT-4N and RT-4AN into one category we simply
label &ldquo;RT-4&rdquo;.</p>

<p>First we check how many residential properties got re-developed since 2000.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_redevelopment" style="height:200px;max-width:640px;" data-url="/data/zone_redevelopment.json"></div>
</div>


<p>Next we take a look what percentage of the existing residential stock is in immediate danger of being torn down, using the
<a href="http://doodles.mountainmath.ca/blog/2016/01/18/redevelopment/">methodology developed earlier</a>.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_teardown" style="height:200px;max-width:640px;" data-url="/data/zone_teardowns.json"></div>
</div>


<p>While there is some correspondence between re-development activity and ratio of teardowns, there are a number of notable
exceptions. RT-1 and RM-9 stand out, but these are
<a href="https://mountainmath.ca/map/assessment?filter=[zoneE_RM-9_RT-1]&amp;zoom=14&amp;lat=49.2146&amp;lng=-123.1282&amp;layer=5&amp;mapBase=2">oddball cases with just a few properties</a>.</p>

<p><a href="https://mountainmath.ca/map/assessment?filter=[zone_RT,years_2000]&zoom=13&lat=49.2581&lng=-123.1166&layer=20&mapBase=2" target="_blank"><img  src="http://doodles.mountainmath.ca/images/new_types_rt.png" style="width:50%;float:right;margin-left:10px;"></a>
We can also map just <a href="https://mountainmath.ca/map/assessment?filter=[zone_RT,years_2000]&amp;zoom=13&amp;lat=49.2581&amp;lng=-123.1166&amp;layer=20&amp;mapBase=2">residential properties in RT that were re-developed since 2000</a>
and colour them by SFH, Duplex and Multi-plex status. We can clearly see how some RT areas, like RT-7, don&rsquo;t see much
re-development, others, like RT-6 see mostly multi-plexes being developed. Some zones, like RT-10, 11, 12 are too new
to be judged on development happening since 2000. For example, zooming in on
<a href="http://mountainmath.ca/map/assessment?filter=[zone_RT-10,residential,years_2009]&amp;zoom=15&amp;lat=49.2485&amp;lng=-123.0734&amp;layer=20&amp;mapBase=2">developments in RT-10 since 2009 paints a very different picture</a>.</p>

<p>There is lots of stuff to explore, but for today I want to look at RT-7 and RT-6 in more detail.</p>

<h4>RT-7</h4>

<p><a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-7,residential]&zoom=15&lat=49.2617&lng=-123.1654&layer=20&mapBase=2" target="_blank"><img  src="http://doodles.mountainmath.ca/images/rt-7.png" style="width:50%;float:left;margin-right:10px;"></a>
A much more interesting case is RT-7, with 35% of properties teardowns but only 4.1% of properties re-developed since 2000.
<a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-7,residential]&amp;zoom=15&amp;lat=49.2617&amp;lng=-123.1654&amp;layer=4&amp;mapBase=2">Looking at the map</a>
we see that RT-7 is comprised of two pockets on the west side, and the teardown candidates stand out in red and orange.
Filtering further to see what
<a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-7,residential,years_2000]&amp;zoom=15&amp;lat=49.2617&amp;lng=-123.1654&amp;layer=20&amp;mapBase=2">has been re-developed since 2000</a>
we see that, considering the size of the two pockets, re-development favours the eastern pocket near 16th and Arbutus. We
can clearly see that that the eastern pocket has an overall more valuable building stock, although it is not clear if that
is due to higher rates of re-development or for other reasons, for example the presence of some slightly larger lots. We
also note that re-development does produce duplex units and even some multi-plex.</p>

<p>So what is going on here? Looking at the <a href="http://former.vancouver.ca/commsvcs/BYLAWS/zoning/rt-7.pdf">RT-7 zoning</a> we
see that the area has been downzoned to 0.4 FSR as was rencently pointed out to me, which can conditionally be upzoned
to 0.6 FSR. Additionally, there are caps on the number of units per hectar to further restrict density.</p>

<h4>RT-6</h4>

<p><a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-6,residential]&zoom=16&lat=49.2606&lng=-123.1097&layer=20&mapBase=2" target="_blank"><img  src="http://doodles.mountainmath.ca/images/rt-6.png" style="width:50%;float:right;margin-left:10px;"></a>
Another interesting example is RT-6. RT-6 has seen modest levels of re-develpment and has a <a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-6,residential]&amp;zoom=16&amp;lat=49.2606&amp;lng=-123.1097&amp;layer=4&amp;mapBase=2">relatively healthy building
stock</a>.
What&rsquo;s even more interesting is that it contains
<a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-6,residential]&amp;zoom=16&amp;lat=49.2597&amp;lng=-123.1101&amp;layer=20&amp;mapBase=2">many multi-plexes</a>.
And more importantly, <a href="https://mountainmath.ca/map/assessment?filter=[zone_RT-6,residential,years_2000]&amp;zoom=16&amp;lat=49.2597&amp;lng=-123.1101&amp;layer=20&amp;mapBase=2">developments since 2000 have mostly produced multi-plexes</a>.</p>

<p>Prime examples of the <em>gentle density</em> that we keep hearing about. I would say that something is working very well here.</p>

<p>So what&rsquo;s the difference? In contrast to RT-7 <a href="http://former.vancouver.ca/commsvcs/BYLAWS/zoning/rt-6.pdf">RT-6 zoning</a> allows for 0.6 FSR
outright, conditionally increased to 0.75. But there are other important differences too. The RT-7 lots are typically
smaller with many at about 340m&sup2; compared to the 580m&sup2; typical RT-6 lots.
(Although RT-7 also contains some 580m&sup2; lots).</p>

<h3>Conclusion</h3>

<p>Does downzoning work? It depends what the goal is. Looking at the RT-7 example, downzoning has slowed re-development compared
to other areas in the city, but it also lead to a deterioration in building stock in RT-7. This is a stop-gap measure,
eventually that lower value building stock will get re-developed.</p>

<p>The combination of larger lots and the heritage retention program in the RT-6 zoning seems to work in producing
gentle density, except that the permitting process takes too long and it is not immediately clear what purpose the
heritage preservation has that allows stripping the building down to the studs and possibly moving it to the front and
then building an infill in the back. There must be a better way to deal with concerns behind
heritage preservation (not much is &ldquo;preserved&rdquo; in this process) and at the same time cut down on the time it
takes to jump through all the permit hoops involved.</p>

<p>It is clear that RS and RT (and RM) zoning would hugely profit from a clearer vision what these zonings should accomplish
and by using data to benchmark how these targets are met.</p>

<div><script>

function bar_graph(div,shiftAxis,domainFormatter,rangeFormatter,domainLabelFormatter,rangeLabelFormatter){
    if (!domainFormatter) domainFormatter=d3.format("d");
    if (!rangeLabelFormatter) rangeLabelFormatter=rangeFormatter;
    if (!rangeFormatter)
     rangeFormatter = function (y) {
        return y;
     };
     if (!domainLabelFormatter) domainLabelFormatter=domainFormatter;

var margin = {top: 20, right: 20, bottom: 40, left: 70},
    width = parseInt(div.style("width")) - margin.left - margin.right,
    height = parseInt(div.style("height")) - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);


var xAxis = d3.svg.axis()
    .scale(x)
    .tickFormat(domainFormatter)
    .orient("bottom");


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(rangeFormatter)
    .ticks(5, rangeFormatter);

var svg = div.append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var data_url=div[0][0].dataset.url;

d3.json(data_url, function(error, json) {
  if (error) throw error;
  var graphData=json[0];
  var data=graphData.data;
  
  var container=d3.select(div.node().parentNode);
  container.selectAll('.legend.no-margin').remove();
  var legend=container.append('div').attr('class',"legend no-margin");
  legend.append('p').html('<i style="background:'+graphData.color + '"></i>' + graphData.label +  '<span style="float:right;margin-right:10px;" id="' + graphData.class+'_value"></span>');
  
  x.domain(data.map(function(d) { return d.date }));
  y.domain([0, d3.max(data, function(d) { return d.count; })]);
  
  var domainTickValues=[];
  var skip=Math.round(40/x.rangeBand());
  if (skip<=0) skip=1;
  for (var i=0;i<x.domain().length;i++) {
    if (i % skip==0) domainTickValues.push(x.domain()[i]);
  }
  if (x.domain().length % 5 !=0) domainTickValues.push(x.domain()[x.domain().length-1]);
  xAxis.tickValues(domainTickValues);

  var xShift=shiftAxis ?  x.rangeBand()/2.0 * 1.1 : 0;
  
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(" + xShift + "," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);
//    .append("text")
//      .attr("transform", "rotate(-90)")
//      .attr("y", 6)
//      .attr("dy", ".71em")
//      .style("text-anchor", "end")
//      .text("Probability");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", graphData.class + " bar")
      .style("fill", graphData.color)
      .attr("x", function(d) { return x(d.date); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.count); })
      .attr("height", function(d) { return height - y(d.count); })
      .on('mouseover',function(d){
         d3.select('#'+this.classList[0]+'_value').text(domainLabelFormatter(d.date) + ': ' + rangeLabelFormatter(d.count)) 
      }).on('click',function(d){
       d3.select('#'+this.classList[0]+'_value').text(domainLabelFormatter(d.date) + ': ' + rangeLabelFormatter(d.count)) 
      }).on('touch',function(d){
         d3.select('#'+this.classList[0]+'_value').text(domainLabelFormatter(d.date) + ': ' + rangeLabelFormatter(d.count)) 
      }).on('mouseout',function(){d3.select('#'+this.classList[0]+'_value').text('')});

      
});

}



var percentageFormatter=d3.format(".1%");
var textFormatter=function(d){return d};
var teardownLabelFormatter=function(d){return percentageFormatter(d) + " teardowns"};
var sfhLabelFormatter=function(d){return percentageFormatter(d) + " SFH"};
var redeveopmentLabelFormatter=function(d){return percentageFormatter(d) + " built since 2000"};
bar_graph(d3.select("#graph_redevelopment"),false,textFormatter,percentageFormatter,textFormatter,redeveopmentLabelFormatter);
bar_graph(d3.select("#graph_teardown"),false,textFormatter,percentageFormatter,textFormatter,teardownLabelFormatter);
bar_graph(d3.select("#graph_sfh"),false,textFormatter,percentageFormatter,textFormatter,sfhLabelFormatter);
</script></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Physical SFH Form Over Time]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2016/03/05/physical-sfh-form-over-time/"/>
    <updated>2016-03-05T22:58:06-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2016/03/05/physical-sfh-form-over-time</id>
    <content type="html"><![CDATA[<p>I was curious how the physical parameters of Single Family Houses changed over time.</p>

<p>Using the <a href="https://mountainmath.ca/map/assessment">assessment dataset</a> merged with the <a href="https://mountainmath.ca/land_use/map">land use dataset</a>
allows to fairly accurately pick out single family houses, and also holds the age of most properies. Together with
the City of Vancouver LIDAR-generated building dataset <a href="https://mountainmath.ca/vancouver_lidar/map">that I have played with before</a>
we can look at physical building parameters.</p>

<!-- more -->


<p>The city dataset is a little coarse, it only contains the main building and does not map things like garages. It&rsquo;s a little
rough and should probably be interpreted cautiously on an individual building level. One could spend the time and derive the
building data directly from the raw LIDAR dataset optimized for this purpose, but for some overview statistics the building
dataset that was derived by the city is just fine. The LIDAR was taken in 2009, so we only consider houses built before that time.</p>

<h3>Site coverage</h3>

<p>One question is how the site coverage of the buildings have changed over time. We simply line up the buildings by the year
they were built, compute the site coverage of the main building relative to the parcel size and graph the quintiles for
each year. For good measure, we throw in the 10 and 90 percentile whiskers.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;" class="whiskers">
<div id="sfh_coverage" style="height:200px;max-width:640px;" data-url="/data/sfh_coverage.json"></div>
<div class="legend no-margin" style="padding-bottom:2em;">
</div>
</div>


<p>What jumps out immediately is that around 1988 there apparently was a change in zoning law that reduced site coverage
of the main building. <strike>I don&rsquo;t know anything about the history of building codes, maybe someone that does could shed some
light onto this.</strike> <a href="https://twitter.com/BrendanDawe/status/706737206484795392">Twitter was fast to provide the answer</a>
it appears that changes in building code were implemented to counteract the growing footprint of houses at the time, details
can be found in <a href="https://open.library.ubc.ca/cIRcle/collections/ubctheses/831/items/1.0086386">Barbara Pettit&rsquo;s Ph.D. thesis</a>.</p>

<h3>Building Height</h3>

<p>The next obvious point of analysis is how building height, in meters, changed over time.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;" class="whiskers">
<div id="sfh_height" style="height:200px;max-width:640px;" data-url="/data/sfh_height.json"></div>
<div class="legend no-margin" style="padding-bottom:2em;">
</div>
</div>


<p>We observe a similar jump in the data around 1988, with building height jumping up as site coverage decreases.</p>

<h3>Building Volumes</h3>

<p>Now let&rsquo;s look at how &ldquo;massive&rdquo; the buildings are, measured by volume in cubic metres.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;" class="whiskers">
<div id="sfh_volume" style="height:200px;max-width:640px;" data-url="/data/sfh_volume.json"></div>
<div class="legend no-margin" style="padding-bottom:2em;">
</div>
</div>


<p>The graph does show that in general houses have gotten more massive starting in the late 80s, but after that have more or less
maintained the same volume. It shows that the combined effect of the regulation change in the late 80s that resulted in
smaller building footprints and taller buildings was that buildings overall got bulkier.</p>

<h3>Roof Type</h3>

<p>Lastly we see how the roof type changes over time, plotting the number of buildings with given roof type for each year.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;" class="whiskers">
<div id="sfh_roof" style="height:200px;max-width:640px;" data-url="/data/sfh_roof.json"></div>
<div class="legend no-margin" style="padding-bottom:2em;">
</div>
</div>


<p>Flat roofs seem to have been quite popular between the mid 60s to mid 80s.</p>

<h3>Length to Width Ratio (Update)</h3>

<p>A question about a regulation change in 1938 <a href="https://twitter.com/GRIDSVancouver/status/706879555550613504">came up on Twitter</a>,
so I thought I should check into the length-to-width ratio to see if anything can be seen there. A ratio of 1
would mean a square footprint, a ratio of 2 means the house is twice as long as wide.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;" class="whiskers">
<div id="sfh_square" style="height:200px;max-width:640px;" data-url="/data/sfh_square.json"></div>
<div class="legend no-margin" style="padding-bottom:2em;">
</div>
</div>


<p>No obvious changes around 1938, but our houses became a lot more square after the late 80s zoning changes.</p>

<h3>Next Steps</h3>

<p>After starting to see what kind of data can be derived from LIDAR data we can start to explore different questions. The
graphs open a small window into the physical parameters of single family homes over time and are only of limited general
interest.</p>

<p>For
more serious analysis we would most likely have to start from the raw LIDAR data, which takes a little bit of effort.</p>

<div><script src="http://doodles.mountainmath.ca/javascripts/box.js"></script></div>




<script>

function stacked_bar_graph(div,shiftAxis,domainFormatter,rangeFormatter,domainLabelFormatter){
    if (!domainFormatter) domainFormatter=d3.format("d")
    if (!rangeFormatter)
     rangeFormatter = function (y) {
        return y;
     };
     if (!domainLabelFormatter) domainLabelFormatter=domainFormatter;

var margin = {top: 20, right: 20, bottom: 40, left: 70},
    width = parseInt(div.style("width")) - margin.left - margin.right,
    height = parseInt(div.style("height")) - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);


var xAxis = d3.svg.axis()
    .scale(x)
    .tickFormat(domainFormatter)
    .orient("bottom");


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(rangeFormatter)
    .ticks(5, rangeFormatter);

var svg = div.append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var data_url=div[0][0].dataset.url;
var legend=d3.select(div.node().parentNode).select('.legend');


d3.json(data_url, function(error, json) {
  if (error) throw error;
  var graphData=json[0];
  var data=graphData.data;
  var color = d3.scale.ordinal().domain(graphData.colors.map(function(d,i){return i}))
  .range(graphData.colors);
  var domain=data.map(function(d){return d.date;});
  x.domain(domain);

  function graphValueId(i){
      return graphData.class + '_' + i + '_value'
  }

  graphData.labels.forEach(function(text,i){
    var color=graphData.colors[i];
    var html='<i style="background:' + color + '"></i> ' + text + ' <span style="float:right;margin-right:10px;" id="' + graphValueId(i) + '"></span>'
    legend.append('p').html(html);
  });
  
  data.forEach(function(d) {
      var y0 = 0;
      d.values = color.domain().map(function(i) { return {date: d.date, y0: y0, y1: y0 += +d.count[i]}; });
      d.total = d.values[d.values.length - 1].y1;
  });
  y.domain([0, d3.max(data, function(d) { return d.total; })]);

  var domainTickValues=[];
  var skip=Math.round(40/x.rangeBand());
  if (skip<=0) skip=1;
  for (var i=0;i<x.domain().length;i++) {
    if (i % skip==0) domainTickValues.push(x.domain()[i]);
  }
  if (x.domain().length % 5 !=0) domainTickValues.push(x.domain()[x.domain().length-1]);
  xAxis.tickValues(domainTickValues);

  var xShift=shiftAxis ?  x.rangeBand()/2.0 * 1.1 : 0;
  
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(" + xShift + "," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);
//    .append("text")
//      .attr("transform", "rotate(-90)")
//      .attr("y", 6)
//      .attr("dy", ".71em")
//      .style("text-anchor", "end")
//      .text("Probability");

    function updateTooltip(d,i){
       color.domain().forEach(function(j){
             var value=d && i==j ? (domainLabelFormatter(d.date) + ': ' +rangeFormatter(d.y1-d.y0)) : '';
             d3.select('#'+graphValueId(j)).text( value);
       });
    }

  var year=svg.selectAll(".year")
    .data(data)
        .enter().append("g")
          .attr("class", "g");
  year.selectAll(".color-bar")
      .data(function(d) { return d.values; })
    .enter().append("rect")
      .attr("class", graphData.class + " color-bar")
      .attr("fill", graphData.color)
      .attr("x", function(d) { return x(d.date); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.y1); })
      .attr("height", function(d) { return Math.max(0, y(d.y0) - y(d.y1)); })
      .attr("fill",function(d,i) {return color(i);})
      .on('mouseover',updateTooltip)
      .on('click',updateTooltip)
      .on('touch',updateTooltip) 
      .on('mouseout',function(){updateTooltip(null,i)});

      
});

}

var yearFormatter=d3.format();
stacked_bar_graph(d3.select("#sfh_roof"),true,yearFormatter,null,yearFormatter);
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Land Use, Roads (and Parking)]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2016/02/29/land-use/"/>
    <updated>2016-02-29T21:10:05-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2016/02/29/land-use</id>
    <content type="html"><![CDATA[<p>The other day at the <a href="https://www.sfu.ca/publicsquare/upcoming-events/city-conversations/2016/Feb-18-2016.html">SFU&rsquo;s City Conversations</a>
someone asked a question about space dedicated to roads, and how that could be unlocked
to aid housing. He mentioned what percentage of space is currently dedicated to roads. I forgot the number,
but I thought to myself that I should look that up for all Metro Vancouver communities. So here we go.</p>

<!-- more -->


<p>Actually, it would be interesting to compare how land is allocated to all kinds of land uses across Metro Vancouver, not just roads.
And with their excellent
<a href="http://doodles.mountainmath.ca/blog/2016/01/31/land-use/">land use dataset</a> it&rsquo;s easy enough to do, justifying spending
two hours on this. <a href="https://mountainmath.ca/land_use/map">Looking at the land use map</a>
one can see that there are some issues with using the dataset for
that purpose, for example the roads within
Stanly Park are missing, as parking lots in Vancouver parks. So this slightly overestimates the green space. But when
added up this won&rsquo;t do much to change the overall area of each land use.</p>

<h3>Land Use Breakdown</h3>

<p>Let&rsquo;s start with a simple chart summing up the land use in each of Metro Vancouver&rsquo;s Municipalities. Just select the one
you are interested in from the dropdown.</p>

<div id="land_use_breakdown" class="land_use"></div>


<p>City of Vancouver stands out as the municipality with the largest proportion of area dedicated to roads right of way.
The right of way includes nature strips, sidewalks, and of course on-street parking.</p>

<h3>Built Area Land Use</h3>

<p>For some of the municipalities large &ldquo;Natural Areas&rdquo; and &ldquo;Undeveloped Area&rdquo; make it difficult to discern the makeup of
the built up areas. So here comes the same graph with some of the large space-cosuming categories taken out.</p>

<div id="land_use_breakdown2" class="land_use"></div>


<p>What&rsquo;s remarkable is that City of Vancouver still is the clear winner in terms of space taken up by roads right of way.</p>

<h3>Roads right of way</h3>

<p>It might be interesting to compute more precisely how the roads right of way is used. But that requires a lot more work.
The City of Vancouver has a dataset with road widths, which would help separate area taken by roads from area taken by
sidewalks and nature strips. One could use google maps to estimate to estimate the amount of space taking up by on-street
parking by sampling a couple of roads and scaling this according to road area. Too much work for me right now, maybe one day I will
have a good enough reason to dedicate some time to this.</p>

<h3>Parking</h3>

<p>Parking in particular is a land use that is artificially inflated. We pay lots of money to buy private property to live
on, and then continue to pay property taxes for that privilege. But we pay nothing to store our vehicles on public roads.</p>

<p>At current land values in Vancouver it just does not make any sense to socialize the cost of parking. A 12m&sup2; on-street
parking space at a low-balled $3000/m&sup2; value is worth $36,000. If we were to price parking at value, rather than
socializing the cost we could have a discussion about using that space more effectively. Killing the parking subsidy
would have a substantial impact on demand (and car ownership), freeing up space to be re-allocated for other uses. For
example for housing by increasing lot sizes and making multi-unit structures more feasible, especally on corner lots.</p>

<hr>


<h3>Update</h3>

<p>Saw a <a href="https://twitter.com/d3visualization/status/705421356222029824">great little data visualization fly by today</a> that
is just the missing link in the above visualizations. A simple way to visualize where all the municipalities stand in
relation to one another. Thought I would throw that in real quick.</p>

<div>
 <div id="radviz" class="radviz"></div>
<div class="radviz-list-container">
        <div class="muni"></div>
        <div class="list"></div>
</div>
<div style="clear:both;"></div>
</div>




<div><script src="http://doodles.mountainmath.ca/javascripts/land_use_breakdown.js"></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Condos]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2016/02/10/on-condos/"/>
    <updated>2016-02-10T11:01:47-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2016/02/10/on-condos</id>
    <content type="html"><![CDATA[<p>Lots has been said about the upper end of owned dwellings. The movement of the &ldquo;million dollar line&rdquo;, the emergence of
the &ldquo;two million dollar line&rdquo; and &ldquo;multi-million dollar lines&rdquo;. Most of that discussion is focused on
<a href="http://www.mountainmath.ca/map/assessment?filter=sfh" target="_blank">single detached homes</a> or on proxies for &ldquo;single detached&rdquo; like
<a href="http://www.mountainmath.ca/map/assessment?filter=rs" target="_blank">RS zoned properties</a>.</p>

<p>But all of these maps have a clear bias toward the more expensive homes. Everyone knows by now where the most expensive properties
are. But where are the more affordable ones?</p>

<!-- more -->


<p>Before continuing and getting disappointed at the end, we want to highlight the huge limitations when looking for affordable homes.
There is no freely available data on the
floor area or number of bedrooms for each dwelling unit. Next to the price and location (which we have), these are the most
important features of a dwelling. And this limits the usefulness of all that follows.</p>

<p>Why continue? It gives a glimpse of what kind of analysis could be done if the information would be <em>freely</em> available.</p>

<h3>The Elephant in the Room</h3>

<p>In principle all this information is available, <a href="https://twitter.com/bcassessment">BCAssessment</a> has all this data. And they even make it
<a href="http://evaluebc.bcassessment.ca/Default.aspx#">available on their (quite nice) eValue website</a>. But their terms of use
prevent us and others from using this information. Most of the information used in the analysis here originates from BCAssessment,
but it comes via the City of Vancouver that has made the data available through their open data portal.</p>

<p>As I understand it, the main reason why this data is not freely available is that BCAssessment is charged to recover their
own operating cost. So they hold onto their data and try to sell it for cost recovery. In the process of which they harm
the ability of municipalities to plan properly and the public to get a clear idea where things are at and have a fact-based
discussion on how to move forward. Which creates large amounts of friction and may lead to social and economic damages far
exceeding any revenue collected by BCAssessment.</p>

<p>Personally, I don&rsquo;t believe that holding back data is a smart way to run a government. You might want to
<a href="http://twitter.com/home/?status=@bcassessment Please add %23openData license to information you publish on eValue! %23giveUsData" target="_blank">ask BCAssessment to #giveUsData</a>.</p>

<p>For now, let&rsquo;s put the data that we do have to the best use and see what we can tease out.</p>

<h3>Locating the Most Affordable Dwellings</h3>

<p><a href="https://mountainmath.ca/map/special/101" target="_blank"><img  src="http://doodles.mountainmath.ca/images/strata.png" style="width:50%;float:left;margin-right:10px;"></a>
Stating the obvious, the most affordable homes aren&rsquo;t &ldquo;single detached&rdquo;, they are condos. And condos have been largely
absent from the affordability debate, although they make up the majority of owned dwelling units in the City of Vancouver.</p>

<p>Let&rsquo;s start off with a <a href="http://mountainmath.ca/map/special/101" target="_blank">map of the roughly 4,500 stratified residential or mixed use properties in Vancouver housing a total of about 10,2000 strata units</a>.
The exact numbers are hard to pin down. (<a href="http://twitter.com/home/?status=@bcassessment Please add %23openData license to information you publish on eValue! %23giveUsData" target="_blank">#giveUsData</a>)</p>

<p>The distribution of stratified units by the total number of strata units
per building gives an idea of the types of strata units that are out there.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_strata_by_number" style="height:200px;max-width:640px;" data-url="/data/strata_by_number.json"></div>
<div class="legend no-margin">
  <p><i style="background:steelblue"></i> Number of strata units by size of strata <span style="float:right;margin-right:10px;" id="unit_counts_value"></span></p>
</div>
</div>


<p>The horizontal axis is not linear, and the bin sizes are not equal, which makes the graph a little difficult to read. We chose bins at
2, 4, 8, 10, 16, 20 at the low end, then of width 10 up to 200, from there width 20 up to 300 and then 400, 500 and 700 at
the top end. Lazy me apologizes for the poor graphic.</p>

<p>We immediately notice the 4,152 strata units in stratas with exactly 2 units usually referred to as &ldquo;duplexes&rdquo;.
There are a lot of strata units are in stratas of size between 20 and 50, but
otherwise the units are fairly well distributed over different building sizes. At the high end there are fewer buildings,
but each with lots of units. So there our graph becomes a little jerky and heavily depends on the cutoffs we choose.</p>

<p>To get a basic idea on how much these units cost we plot the number of strata units by price bracket.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_strata_by_price" style="height:200px;max-width:640px;" data-url="/data/strata_by_price.json"></div>
<div class="legend no-margin">
  <p><i style="background:steelblue"></i> Number of strata units by price <span style="float:right;margin-right:10px;" id="affordable_value"></span></p>
</div>
</div>


<p>The distribution looks largely as one would expect. It peaks between the $400k and $500k mark, with a median value of
$482,000. But there are a couple of things that jump out. Firstly, there are suspiciously many condos
below $100k, more than half of which (445 to be precise), are less than $50k. There are places where one could by
a condo for that price, but not in Vancouver. These are stratified parking spaces or other amenity spaces.</p>

<p>Next let&rsquo;s focus in on the 8,313 duplex and multi-plex units with 8 or fewer units (in 2,995 buildings) and plot these
separately.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_multiplex_by_price" style="height:200px;max-width:640px;" data-url="/data/multiplex.json"></div>
<div class="legend no-margin">
  <p><i style="background:steelblue"></i> Number of multiplex units by price <span style="float:right;margin-right:10px;" id="multiplex_value"></span></p>
</div>
</div>


<p>We see that the price distribution for multiplex units peaks at a higher price between $800k and $900k, but the overall
numbers are quite small when compared to all strata units.</p>

<h3>Affordable Strata Units</h3>

<p>Let&rsquo;s try to understand where the &ldquo;affordable&rdquo; housing stock is, which we take to be units below $500k, or roughly the
bottom half of the distribution. We would like to map the properties containing housing
units for each of our price brackets, but this gets tricky since the dataset does not hold
information which units are parking spaces and which are commercial.</p>

<p>We need to take care of the problem with needing to distinguish parking spaces from housing units. And from commercial units.
(<a href="http://twitter.com/home/?status=@bcassessment Please add %23openData license to information you publish on eValue! %23giveUsData" target="_blank">#giveUsData</a>) So we are left with
using proxies, so let&rsquo;s set a cutoff price so that most units below are parking stalls and most units above are (residential)
units.</p>

<p>Generally, parking spaces should not cost more than $50,000 which is roughly the cost to build underground
parking. Around $40,000 if it&rsquo;s only one level, getting up to $75,000 (or sometimes even more) when having to go down deeper or water becomes an issue. The
fact that some spaces go for significantly less is the result of mandatory parking minimums. Some parking spaces may be worth
more than $100,000 as some people are willing to pay a premium for a convenient spot. That may mean a spot next to the
elevator by the exit ramp, or simply a parking spot in a specific building that is under supplied and trekking across the
street to a spot somewhere else is inconvenient enough. Or some stratified parking spaces might consist of several
parking spots.</p>

<h3>Location of Affordable Condos</h3>

<p><a href="https://mountainmath.ca/map/special/110" target="_blank"><img  src="http://doodles.mountainmath.ca/images/strata_500k.png" style="width:50%;float:left;margin-right:10px;"></a>
Since it is impossible to pick out the housing units out of all the strata units, all we can do is map all strata units,
understanding that
those below $50k are most likely parking spaces, those between $50k and $100k could be parking or housing (or commercial) and the
majority of units above $100k are housing.</p>

<p>And we can&rsquo;t actually map the individual units, only the buildings that house the units. Here are maps of the buildings
housing the units in each of the lower brackets.</p>

<ul>
<li><a href="https://mountainmath.ca/map/special/41" target="_blank">&lt; $100k (715 units in 17 buildings)</a></li>
<li><a href="https://mountainmath.ca/map/special/42" target="_blank">$100k &ndash; $200k (2,415 units in 198 buildings)</a></li>
<li><a href="https://mountainmath.ca/map/special/43" target="_blank">$200k &ndash; $300k (10,270 units in 644 buildings)</a></li>
<li><a href="https://mountainmath.ca/map/special/44" target="_blank">$300k &ndash; $400k (19,128 units in 1,112 buildings)</a></li>
<li><a href="https://mountainmath.ca/map/special/45" target="_blank">$400k &ndash; $500k (20,538 units in 1,219 buildings)</a></li>
</ul>


<p>Clickin into a particular building and hitting the &ldquo;more&rdquo; button will pull up (a slightly cleaned) tax roster where you
can get more information on the units. And if you are really interested in finding out more about a particular one
you can always <a href="http://evaluebc.bcassessment.ca/Default.aspx#">head on over to BCAssessment&rsquo;s eValue website</a> to look up
more of those details that BCAssessment keeps in public view but locked off from systematic public scrutiny.
(<a href="http://twitter.com/home/?status=@bcassessment Please add %23openData license to information you publish on eValue! %23giveUsData" target="_blank">#giveUsData</a>)</p>

<h3>Makeup of Condos</h3>

<p>The built quality of strata units is generally higher, dollar for dollar, than that of single family homes. This should not
come as a surprise as land is very expensive and stata units tend to use land more efficiently. There are only 27 residential
or mixed use strata buildings that classify as <em>teardowns</em>,
<a href="http://doodles.mountainmath.ca/blog/2016/01/18/redevelopment/">with a teardown coefficient below 5%</a>.
And 25 of these are duplexes, one is a 3-plex and one an 8-plex. There are no condos buildings with more than 8 units that
fit our most restrictive definition of <em>teardown</em>.</p>

<p>Next we explore what kind of buildings the affordable units are in by graphing the number of units in several price ranges
per size of the strata building it is in.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_affordable_strata_by_number" style="height:200px;max-width:640px;" data-url="/data/affordable_strata_by_number.json"></div>
<div class="legend no-margin">
</div>
</div>


<p>It looks like buildings with 20 to 60 units are quite good at producing affordable units. Partially that&rsquo;s due to their
abundance, but graphing the percentage of units in each price bracket confirms that these buildings tend to produce a
nice mixture of low and high value condos. But larger condo buildings can also achieve this, although the actual performance
of what has been built is mixed. Other factors, for example building age, are likely also at play here.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_percentage_affordable_strata_by_number" style="height:200px;max-width:640px;" data-url="/data/percentage_affordable_strata_by_number.json"></div>
<div class="legend no-margin">
</div>
</div>


<p>To see what the distribution of strata units by age is, we use the same price cutoffs and sort the strata units into age
brackets. Since we are mostly interested in the more affordable units we sort out units in buildings with 4 or fewer units.
These units might skew some of the age brackets.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_affordable_strata_by_age" style="height:200px;max-width:640px;" data-url="/data/affordable_strata_by_age.json"></div>
<div class="legend no-margin">
</div>
</div>


<p>To highlight the proportional makeup we again and graph this again as percentages.</p>

<div style="margin:10px 50px;padding:5px;border: 1px solid black;border-radius:5px;">
<div id="graph_percentage_affordable_strata_by_age" style="height:200px;max-width:640px;" data-url="/data/percentage_affordable_strata_by_age.json"></div>
<div class="legend no-margin">
</div>
</div>


<p>We see how generally the percentage of more affordable units increases with the age of the building. Newer units generally
tend to be more expensive at first and becoming more affordable over time as the building ages.</p>

<h3>Taking Stock</h3>

<p>If you read this far you probably agree that this exercise was mostly a waste of time. Hopefully you are earger to see this
analysis split up by number of bedrooms and floor area. If you are all riled up at the lack of data and BCAssessment
not giving out this information with a clean open data license you might want to drop them a line and
<a href="http://twitter.com/home/?status=@bcassessment Please add %23openData license to information you publish on eValue! %23giveUsData" target="_blank">ask for at least the information they publish eValue to be made available with an #openData license!</a></p>

<p>I am still hopeful that this might happen some day, and we can get a much better picture of the buildings in BC cities
and check how they perform in fulfilling the needs of the community. And learn from that to make informed policy choices.</p>

<script>

function stacked_bar_graph(div,shiftAxis,domainFormatter,rangeFormatter,domainLabelFormatter){
    if (!domainFormatter) domainFormatter=d3.format("d")
    if (!rangeFormatter)
     rangeFormatter = function (y) {
        return y;
     };
     if (!domainLabelFormatter) domainLabelFormatter=domainFormatter;

var margin = {top: 20, right: 20, bottom: 40, left: 70},
    width = parseInt(div.style("width")) - margin.left - margin.right,
    height = parseInt(div.style("height")) - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);


var xAxis = d3.svg.axis()
    .scale(x)
    .tickFormat(domainFormatter)
    .orient("bottom");


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(rangeFormatter)
    .ticks(5, rangeFormatter);

var svg = div.append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var data_url=div[0][0].dataset.url;
var legend=d3.select(div.node().parentNode).select('.legend');


d3.json(data_url, function(error, json) {
  if (error) throw error;
  var graphData=json[0];
  var data=graphData.data;
  var color = d3.scale.ordinal().domain(graphData.colors.map(function(d,i){return i}))
  .range(graphData.colors);
  var domain=data.map(function(d){return d.date;});
  x.domain(domain);

  function graphValueId(i){
      return graphData.class + '_' + i + '_value'
  }

  graphData.labels.forEach(function(text,i){
    var color=graphData.colors[i];
    var html='<i style="background:' + color + '"></i> ' + text + ' <span style="float:right;margin-right:10px;" id="' + graphValueId(i) + '"></span>'
    legend.append('p').html(html);
  });
  
  data.forEach(function(d) {
      var y0 = 0;
      d.values = color.domain().map(function(i) { return {date: d.date, y0: y0, y1: y0 += +d.count[i]}; });
      d.total = d.values[d.values.length - 1].y1;
  });
  y.domain([0, d3.max(data, function(d) { return d.total; })]);

  var domainTickValues=[];
  var skip=Math.round(40/x.rangeBand());
  if (skip<=0) skip=1;
  for (var i=0;i<x.domain().length;i++) {
    if (i % skip==0) domainTickValues.push(x.domain()[i]);
  }
  if (x.domain().length % 5 !=0) domainTickValues.push(x.domain()[x.domain().length-1]);
  xAxis.tickValues(domainTickValues);

  var xShift=shiftAxis ?  x.rangeBand()/2.0 * 1.1 : 0;
  
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(" + xShift + "," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);
//    .append("text")
//      .attr("transform", "rotate(-90)")
//      .attr("y", 6)
//      .attr("dy", ".71em")
//      .style("text-anchor", "end")
//      .text("Probability");

    function updateTooltip(d,i){
       color.domain().forEach(function(j){
             var value=d && i==j ? (domainLabelFormatter(d.date) + ': ' +rangeFormatter(d.y1-d.y0)) : '';
             d3.select('#'+graphValueId(j)).text( value);
       });
    }

  var year=svg.selectAll(".year")
    .data(data)
        .enter().append("g")
          .attr("class", "g");
  year.selectAll(".color-bar")
      .data(function(d) { return d.values; })
    .enter().append("rect")
      .attr("class", graphData.class + " color-bar")
      .attr("fill", graphData.color)
      .attr("x", function(d) { return x(d.date); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.y1); })
      .attr("height", function(d) { return Math.max(0, y(d.y0) - y(d.y1)); })
      .attr("fill",function(d,i) {return color(i);})
      .on('mouseover',updateTooltip)
      .on('click',updateTooltip)
      .on('touch',updateTooltip) 
      .on('mouseout',function(){updateTooltip(null,i)});

      
});

}

function bar_graph(div,shiftAxis,domainFormatter,rangeFormatter,domainLabelFormatter){
    if (!domainFormatter) domainFormatter=d3.format("d")
    if (!rangeFormatter)
     rangeFormatter = function (y) {
        return y;
     };
     if (!domainLabelFormatter) domainLabelFormatter=domainFormatter;

var margin = {top: 20, right: 20, bottom: 40, left: 70},
    width = parseInt(div.style("width")) - margin.left - margin.right,
    height = parseInt(div.style("height")) - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);


var xAxis = d3.svg.axis()
    .scale(x)
    .tickFormat(domainFormatter)
    .orient("bottom");


var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(rangeFormatter)
    .ticks(5, rangeFormatter);

var svg = div.append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var data_url=div[0][0].dataset.url;

d3.json(data_url, function(error, json) {
  if (error) throw error;
  var graphData=json[0];
  var data=graphData.data;
  x.domain(data.map(function(d) { return d.date }));
  y.domain([0, d3.max(data, function(d) { return d.count; })]);
  
  var domainTickValues=[];
  var skip=Math.round(40/x.rangeBand());
  if (skip<=0) skip=1;
  for (var i=0;i<x.domain().length;i++) {
    if (i % skip==0) domainTickValues.push(x.domain()[i]);
  }
  if (x.domain().length % 5 !=0) domainTickValues.push(x.domain()[x.domain().length-1]);
  xAxis.tickValues(domainTickValues);

  var xShift=shiftAxis ?  x.rangeBand()/2.0 * 1.1 : 0;
  
  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(" + xShift + "," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);
//    .append("text")
//      .attr("transform", "rotate(-90)")
//      .attr("y", 6)
//      .attr("dy", ".71em")
//      .style("text-anchor", "end")
//      .text("Probability");

  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", graphData.class + " bar")
      .attr("fill", graphData.color)
      .attr("x", function(d) { return x(d.date); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.count); })
      .attr("height", function(d) { return height - y(d.count); })
      .on('mouseover',function(d){
         d3.select('#'+this.classList[0]+'_value').text(domainLabelFormatter(d.date) + ': ' + rangeFormatter(d.count)) 
      }).on('click',function(d){
       d3.select('#'+this.classList[0]+'_value').text(domainLabelFormatter(d.date) + ': ' + rangeFormatter(d.count)) 
      }).on('touch',function(d){
         d3.select('#'+this.classList[0]+'_value').text(domainLabelFormatter(d.date) + ': ' + rangeFormatter(d.count)) 
      }).on('mouseout',function(){d3.select('#'+this.classList[0]+'_value').text('')});

      
});

}


var priceFormatter2=d3.format("$,");
    var priceFormatter = function (y) {
        return y>=1000000 ? (priceFormatter2(y/1000000) + 'm') : (priceFormatter2(y/1000) + 'k');
    };
    var brackets=[100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,2000000,10000000,20000000,40000000]

var binFormatter=function(top){
    var bottom=0;
    if (top<=1000000) bottom=top-100000;
    else if (top==2000000) bottom= 1000000;
    else if (top==10000000) bottom= 2000000;
    else if (top=20000000) bottom= 10000000;
    else bottom=20000000;
    return priceFormatter(bottom) + ' - ' + priceFormatter(top);
}
var percentageFormatter=d3.format("%");
var numberFormatter=d3.format(",");
var numberBinFormatter=function(top){
    var     bins=[0,1,2,4,8,10,16,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,300,400,500,700];
    var index=0;
    while (bins[index]<top && index<bins.length) index ++;
    bottom=bins[index-1]+1;
    return (bottom == top) ? numberFormatter(bottom) : numberFormatter(bottom) + ' - ' + numberFormatter(top);
}
var yearFormatter=d3.format();//function(d){return d;};
var yearBinFormatter=function(top){
     var     bins=[1970,1980,1990,1995,2000,2005,2010,2020];
     var index=0;
     while (bins[index]<top && index<bins.length) index ++;
     bottom=bins[index-1]+1;
     return (bottom == top) ? yearFormatter(bottom) : yearFormatter(bottom) + ' - ' + yearFormatter(top);
}
bar_graph(d3.select("#graph_strata_by_price"),true,priceFormatter,null,binFormatter);
bar_graph(d3.select("#graph_multiplex_by_price"),true,priceFormatter,null,binFormatter);
bar_graph(d3.select("#graph_strata_by_number"),true,numberFormatter,null,numberBinFormatter);
stacked_bar_graph(d3.select("#graph_affordable_strata_by_number"),true,numberFormatter,null,numberBinFormatter);
stacked_bar_graph(d3.select("#graph_percentage_affordable_strata_by_number"),true,numberFormatter,percentageFormatter,numberBinFormatter);
stacked_bar_graph(d3.select("#graph_affordable_strata_by_age"),true,yearFormatter,null,yearBinFormatter);
stacked_bar_graph(d3.select("#graph_percentage_affordable_strata_by_age"),true,yearFormatter,percentageFormatter,yearBinFormatter);
</script>

]]></content>
  </entry>
  
</feed>
