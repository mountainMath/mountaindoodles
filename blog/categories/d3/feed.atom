<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: d3 | Mountain Doodles]]></title>
  <link href="http://doodles.mountainmath.ca/blog/categories/d3/feed.atom" rel="self"/>
  <link href="http://doodles.mountainmath.ca/"/>
  <updated>2016-01-17T21:33:11-08:00</updated>
  <id>http://doodles.mountainmath.ca/</id>
  <author>
    <name><![CDATA[MountainMath]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Updated Vancouver Assessment Data]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2016/01/17/updated-vancouver-assessment-data/"/>
    <updated>2016-01-17T11:34:09-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2016/01/17/updated-vancouver-assessment-data</id>
    <content type="html"><![CDATA[<p><a href="https://mountainmath.ca/map/assessment?layer=4"><img  src="http://doodles.mountainmath.ca/images/relative_land.jpg" style="width:50%;float:right"></a>
The friendly folks at
<a href="http://vancouver.ca/your-government/open-data-catalogue.aspx">Vancouver Open Data</a> just
<a href="https://twitter.com/VanOpenData/status/688060388190097408">updated their property assessment data</a> with the fresh 2016
property tax assessments. Time to run the script to update the <a href="https://mountainmath.ca/map/assessment">Vancouver Assessment Map</a>
with the new data. And for good measure I pasted over some of the thematic map engine from <a href="https://censusmapper.ca">CensusMapper</a>
to improve the mapping performance.</p>

<h4>Maps</h4>

<!-- more -->


<p><img  src="http://doodles.mountainmath.ca/images/map_menu.png" style="width:25%;margin-left:5px;float:right">The <a href="https://mountainmath.ca/map/assessment">interactive assessment map</a> offers several views. In the panel on the top
right we can select how to view the data. It offers standard thematic maps for value change, total value, building value
and building age and zoning. And there are some options that warrant more explanation:</p>

<ul>
<li><a href="https://mountainmath.ca/map/assessment?layer=5"><em>Relative Land Value</em>:</a> The colours on the map show each property by the
land value per m&sup2;. We can immediately spot the east-west land gradient, as well as how zoning affects land value.
When zooming in we also see the effect of lot size on land value.</li>
<li><a href="https://mountainmath.ca/map/assessment?layer=10"><em>Tax Density</em>:</a> This map looks at the tax dollars collected
by the city by area. It tells us the relative rate at what each property is contributing to city services. We can again
observe the impact of exclusionary zoning.</li>
<li><a href="https://mountainmath.ca/map/assessment?layer=4"><em>Relative Value of Building</em>:</a>
<a href="https://mountainmath.ca/map/assessment?layer=4"><img  src="http://doodles.mountainmath.ca/images/teardown.jpg" style="width:50%;float:right"></a>
This map simply divides the building value
by the total property value. There are many ways to interpret this map, my favourite is to use this as a &ldquo;Teardown Predictor&rdquo;.
Essentially, as the percentage of the building value approaches zero the probability that it will get torn down in the
near future increases. Imagine someone spending $1.5m to buy a property with a house valued at $37k. Many people don&rsquo;t
mind living in a house worth $37k, but someone who is spending $1.5m would probably prefer to buy a different property
with a higher quality house. Or spend more money to upgrade the house. How will it be upgraded? Renovating is in most
cases economically unsound, most people will choose to tear down and rebuild. In fact, the <em>teardown threshold</em> is
likely higher than the 2.5% in the example given. The percentage of properties in Vancouver where the building value is
less than 2.5% of the total value has slightly decreaed in the last year from 17.9% to 17.8%, but the percentage of properties
with building value less than 5% of the total value has increased from 32% to 33.5% during the last year.</li>
</ul>


<h4>The Data</h4>

<p>The data originates with BC Assessment, which estimates land and building values of each property based on recent sales
of comparable properties. The assessment was done in summer 2015 and is based on sales before that, so at this point in
time the data lags the market by about one year. Values for individual properties may well be off, depending how well
renovations and improvements were reported and how well the BC Assessment estimates work for the given property. On
average they should reflect the market about half a year to one year ago.</p>

<p>Sadly, BC Assessment does not give out their data with a license that would allow mapping it the way I do, so we have
to rely on municipalities to release it through their open data portals. The format of the data from each municipality is
different, so lazy me is only importing data from City of Vancouver, although some other nearby municipalities are also releasing
there data.</p>

<p>The motivation behind the map was to understand the building stock. Some effort was made to filter out parks, but the
algorithm is far from perfect and will often includes parks that host building
structures, as well as marinas with structures on them.</p>

<p>The new city dataset does not include the 2016 tax levy, so we still only show the 2015 tax levies until CoV updated their dataset.</p>

<h4>History</h4>

<p>Here is a quick history of the overall land and building values aggregated for Vancouver between 2006 and 2016.</p>

<div id="graph" style="height:200px;max-width:640px;" data-lines="/data/vancouver_stats.json"></div>


<div class="legend no-margin">
  <p><i style="background:blue"></i> Land Value <span id="land_value"></span></p>
  <p><i style="background:green"></i> Building Value <span id="building_value"></span></p>
</div>


<p>When looking at all properties in the city, the increase in land
value year over year was 21.4% ($45.2bn), while overall building values increased by 7.3% ($5bn). Hover, click or touch
the points in the graph to get the values for the corresponding year.</p>

<h4>Neighbourhoods</h4>

<p>Lastly a quick overview over the neighbourhoods. Land and building values have not increased evenly throughout in the year.
I aggregated all tax data by neighbourhood and split it into land value and building value increases.
These numbers should be used as guidance only, they mix lots of different types of properties and include parks.</p>

<p>Here is the breakdown by neighbourhood:</p>

<ul>
<li>Renfrew-Collingwood: Land: 30.6% ($1.2bn), Building: 5.8% ($46.0m)</li>
<li>Sunset: Land: 26.6% ($1.6bn), Building: 5.9% ($74.2m)</li>
<li>Oakridge: Land: 17.6% ($1.2bn), Building: 12.6% ($207.4m)</li>
<li>Downtown: Land: 16.9% ($0.8bn), Building: 3.2% ($91.2m)</li>
<li>Kerrisdale: Land: 18.7% ($1.3bn), Building: 3.3% ($54.1m)</li>
<li>Victoria-Fraserview: Land: 28.0% ($1.5bn), Building: 5.6% ($65.2m)</li>
<li>Grandview-Woodland: Land: 24.9% ($1.7bn), Building: 0.7% ($17.4m)</li>
<li>West End: Land: 22.6% ($2.5bn), Building: 3.5% ($188.4m)</li>
<li>Hastings-Sunrise: Land: 25.1% ($1.1bn), Building: 4.9% ($63.8m)</li>
<li>Killarney: Land: 17.8% ($0.3bn), Building: 14.1% ($241.6m)</li>
<li>Marpole: Land: 17.8% ($0.3bn), Building: 14.1% ($241.6m)</li>
<li>Kitsilano: Land: 21.6% ($3.3bn), Building: 4.3% ($134.5m)</li>
<li>Shaughnessy: Land: 18.6% ($1.7bn), Building: 7.4% ($117.7m)</li>
<li>West Point Grey: Land: 20.2% ($2.3bn), Building: 5.2% ($88.3m)</li>
<li>Fairview: Land: 19.4% ($2.0bn), Building: -1.0% (-$52.4m)</li>
<li>Downtown Eastside: Land: 21.9% ($2.6bn), Building: 4.9% ($194.9m)</li>
<li>Kensington-Cedar Cottage: Land: 24.9% ($1.7bn), Building: 0.7% ($17.4m)</li>
<li>Riley Park: Land: 26.4% ($1.0bn), Building: 4.0% ($40.2m)</li>
<li>Mount Pleasant: Land: 21.9% ($2.6bn), Building: 4.9% ($194.9m)</li>
<li>South Cambie: Land: 20.9% ($1.5bn), Building: 21.4% ($268.1m)</li>
<li>Strathcona: Land: 21.9% ($2.6bn), Building: 4.9% ($194.9m)</li>
<li>Dunbar Southlands: Land: 21.8% ($1.0bn), Building: 11.2% ($126.6m)</li>
<li>Arbutus Ridge: Land: 21.4% ($1.6bn), Building: 1.1% ($17.3m)</li>
</ul>


<p>It becomes immediately clear that the increase in property values is mostly driven by land, note that total value increases
for land and buildings are reported in billions and millions, respectively. The building stock does not
have time to catch up, with the exception of South Cambie. Fairview stands out with declining overall building values.</p>

<script>
var ready_for_graph = function() {
    var d3lines=[];
    var padding = {top: 20, right: 20, bottom: 30, left: 90};
    var prevChartWidth = 0, prevChartHeight = 0;
    var updateTransistionMS = 750; // milliseconds
    var sourceData, lineData, xScale, yScale, line;

    var symbol;
    var prefix;
    var numberFormatter = function (y) {
        return '$' + Math.round(prefix.scale(y*10))/10.0 + symbol;
    };

    var graphs=d3.select("#graph");
    var div=graphs[0][0];
    if (div==null|| div.childElementCount!=0) {return;}
    var data_url=div.dataset.url;

    // create svg and g to contain the chart contents
    var baseSvg = graphs.append("svg");
    var chartSvg=baseSvg
        .append("g")
        .attr("class", "chartContainer")
        .attr("transform", "translate(" + padding.left + "," + padding.top + ")");

    // create the x axis container
    chartSvg.append("g")
        .attr("class", "x axis");

    // create the y axis container
    chartSvg.append("g")
        .attr("class", "y axis");
    var line;
    var largest=null;
    var lineData;
    if (div.dataset.lines) {
        d3.json(div.dataset.lines,function(error,json){
        lineData=json;
        var domain=[null,null];
        var range=[null,null];
        for (var i=0;i<lineData.length;i++){
            lineData[i].data.forEach(function(d) {
                d.date = +d.date;
                d.count = +d.count;
                if (domain[0]==null || domain[0]> d.date) domain[0]= d.date;
                if (domain[1]==null || domain[1]< d.date) domain[1]= d.date;
                if (range[0]==null || range[0]> d.count) range[0]= d.count;
                if (range[1]==null || range[1]< d.count) range[1]= d.count;
            });
        }
        xScale=d3.scale.linear().domain(domain);
        var toAdd=(range[1]-range[0])/10;
        range[0]-=toAdd;
        range[1]+=toAdd;
        yScale=d3.scale.linear()
            .domain(range);

        line = d3.svg.line()
            .x(function(d) { return xScale(d.date); })
            .y(function(d) { return yScale(d.count); })
            .interpolate("linear");

        xAxis = d3.svg.axis()
            .scale(xScale)
            .orient("bottom")
            .tickFormat(d3.format("d"))
            .tickValues(domain);

        yAxis = d3.svg.axis()
            .scale(yScale)
            .orient("left")
            .tickFormat(numberFormatter)
            .ticks(5);

        prefix = d3.formatPrefix(range[1]);
        if (prefix.symbol=='K') {
            symbol='k'
        } else if (prefix.symbol=='M') {
                symbol='m'
        } else if (prefix.symbol=='G') {
            symbol='bn'
        } else if (prefix.symbol=='T') {
            symbol='tn'
        }
        updateChart(true);
        });

    }


    function updateChart(init)
    {
        // get the height and width subtracting the padding
//    var innerHeight = window.innerHeight - 20;
        var innerWidth = window.innerWidth - 20;
        var divWidth=$(div).width();
        if (divWidth==0) divWidth=$(div.parentElement.parentElement).width();
        var maxWidth=parseInt($(div).css('max-width'));
        if (divWidth==0) divWidth=innerWidth*0.8;
        if (divWidth>maxWidth) divWidth=maxWidth;
        var chartWidth = divWidth-padding.left-padding.right;//960 - margin.left - margin.right,
        var chartHeight = $(div).height()-padding.top-padding.bottom;//500 - margin.top - margin.bottom;


        // only update if chart size has changed
        if ((prevChartWidth != chartWidth) ||
            (prevChartHeight != chartHeight)) {
            prevChartWidth = chartWidth;
            prevChartHeight = chartHeight;

            //set the width and height of the SVG element
            chartSvg.attr("width", chartWidth + padding.left + padding.right)
                .attr("height", chartHeight + padding.top + padding.bottom);
            baseSvg.attr("width", chartWidth + padding.left + padding.right)
                .attr("height", chartHeight + padding.top + padding.bottom);

            // ranges are based on the width and height available so reset
            xScale.range([0, chartWidth]);
            yScale.range([chartHeight, 0]);

            if (init) {
                // if first run then just display axis with no transition
                chartSvg.select(".x")
                    .style({ 'stroke': 'grey', 'fill': 'none', 'stroke-width': '1px'})
                    .attr("transform", "translate(0," + chartHeight + ")")
                    .call(xAxis);

                chartSvg.select(".y")
                    .style({ 'stroke': 'grey', 'fill': 'none', 'stroke-width': '1px'})
                    .call(yAxis);
            }
            else {
                // for subsequent updates use a transistion to animate the axis to the new position
                var t = chartSvg.transition().duration(updateTransistionMS);

                t.select(".x")
                    .attr("transform", "translate(0," + chartHeight + ")")
                    .call(xAxis);

                t.select(".y")
                    .call(yAxis);
            }

            for (var i = 0; i < lineData.length; i++) {
                var sourceData=lineData[i].data;
                var color=lineData[i].color;
                var label=lineData[i].label;
                var className=lineData[i].class;

                // bind up the data to the line
                var lines = chartSvg.selectAll("path.line."+className)
                    .data([lineData[i].data]); // needs to be an array (size of 1 for our data) of arrays

                // transistion to new position if already exists
                lines.transition()
                    .duration(updateTransistionMS)
                    .attr("d", line);

                // add line if not already existing
                lines.enter().append("path")
                    .attr("class", "line")
                    .attr("stroke", color)
                    .attr("stroke-width", 2)
                    .attr('fill','none')
                    .attr("d", line);

                // bind up the data to an array of circles
                var circle = chartSvg.selectAll("circle."+className)
                    .data(sourceData);

                // if already existing then transistion each circle to its new position
                circle.transition()
                    .duration(updateTransistionMS)
                    .attr("cx", function (d) {
                        return xScale(d.date);
                    })
                    .attr("cy", function (d) {
                        return yScale(d.count);
                    });

                // if new circle then just display
                circle.enter().append("circle")
                    .attr("cx", function (d) {
                        return xScale(d.date);
                    })
                    .attr("cy", function (d) {
                        return yScale(d.count);
                    })
                    .attr("r", 4)
                    .attr('fill', 'transparent')
                    .style("stroke", color)
                    .style("stroke-width", 8)
                    .attr("class", className)
                    .on('mouseover',function(d){
                       d3.select('#'+this.classList[0]+'_value').text(d.date + ': ' + numberFormatter(d.count)) 
                    }).on('click',function(d){
                     d3.select('#'+this.classList[0]+'_value').text(d.date + ': ' + numberFormatter(d.count)) 
                    }).on('touch',function(d){
                       d3.select('#'+this.classList[0]+'_value').text(d.date + ': ' + numberFormatter(d.count)) 
                    }).on('mouseout',function(){d3.select('#'+this.classList[0]+'_value').text('')});

            }
        }
    }

    // look for resize but use timer to only call the update script when a resize stops
    var resizeTimer;
    window.onresize = function(event) {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function()
        {
            updateChart(false);
        }, 100);
    }


};
ready_for_graph();
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Canvas vs SVG]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2015/12/27/canvas-vs-svg/"/>
    <updated>2015-12-27T15:53:02-08:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2015/12/27/canvas-vs-svg</id>
    <content type="html"><![CDATA[<h4>CensusMapper Behind the Scenes</h4>

<p>The idea behind <a href="https://censusmapper.ca">CensusMapper</a> is that it takes away all the technical barriers to dealing with census data. So how does
CensusMapper work behind the scenes?</p>

<h4>CensusMapper Data Workflow</h4>

<!-- more -->


<p>The general setup is quite simple. We use the lean javascript open mapping platform <a href="http://leafletjs.com">leaflet</a>
as the base for mapping information. Leaflet handles the logic of dealing with zoom and pan and keeping track of the
geographic boundaries that should be mapped. That information gets then passed on to the CensusMapper servers.</p>

<p>CensusMapper will then send the appropriate census geographic polygons to the browser for leaflet to display. Once the
geographic data is available for mapping, some custom code checks what kind of information the user wants to display and
requests the census data required to make the map. The census information is then assembled on the server, sent down
and attached to the polygons and drawn
on the browser window within leaflet. This two-tier process allows the highly dynamic mapping in CensusMapper where the
data-heavy geographic polygons are kept separately thus can be cached and re-used.</p>

<h4>Drawing Census Data</h4>

<p>There are a number of ways how we can display census data in the browser. At CensusMapper we have played with three
different technologies to map data that vary in performance and browser support. They all have in common that they
won&rsquo;t run on Internet Explorer 8 or earlier, but we have just about reached the point in time where it is acceptable to
ignore IE8- in products meant for the &ldquo;general internet audience&rdquo;.</p>

<h5>SVG</h5>

<p><a href="https://en.wikipedia.org/wiki/Scalable_Vector_Graphics">SVG</a> is what our maps have been using so far. SVGs are fairly high level, which means it&rsquo;s very little work
to implement and map information. One simply passes a polygon to the browser, tells it how to color it, and the browser
takes care of the rest. SVG elements can easily be styled via CSS, so there is essentially no work involved to deal with
highlight on hover, scaling for retina displays, patterns for census data quality flags, etc. We use
<a href="https://github.com/mbostock/d3">d3.js</a> to attach the geographic and census data right to the SVG elements for easy
manipulation.</p>

<p>While mapping data this way is very easy, for CensusMapper there are two problems.</p>

<ol>
<li>We are restricted in how we can display information by the capabilities of SVG.</li>
<li>SVG rendering is done by the browser, and not all browsers are equal. Most importantly, SVG rendering in Internet
Explorer is excruciatingly slow. So slow, that CensusMapper becomes essentially useless within Internet Explorer. We
felt compelled to add a warning messeage that displayed when people opened CensusMapper with Internet Explorer. And
when you do that, that&rsquo;s a sure sign that your app has a serious problem.
<img src="/images/chrome.png" alt="Browser Warning" />
So how to get around those issues? Enter Canvas.</li>
</ol>


<h5>Canvas</h5>

<p><a href="https://en.wikipedia.org/wiki/Canvas_element">Canvas</a> offers a way to draw images in a browser. Unlike SVG, the drawing has to be done &ldquo;by hand&rdquo;. And the result is just
an image, with no clear way to tell where it came from. There is no way to attach any information to individual
structures drawn on a canvas. All the logic for highlight on hover, figuring out what data is associated with the mouse
position, dealing with retina displays, etc. needs to be added by hand.</p>

<p>On the upside, a good canvas implementation is a lot faster than SVG. And it opens the door to changes in how the data
is handled that bring additional performance improvements. In particular, we can now chop up census polygons and render
the pieces separately, greatly cutting down on the size of the downloaded data, as well as the complexity of the
polygons that get rendered. And the performance improvements are noticeable across all browsers and platforms.</p>

<p>At the end of the day it is actually not that much work and we flipped the switch on this just before the Christmas
break. CensusMapper is now running using canvas instead SVG for
the main maps. We
kept the look and feel the same, so unless you dig into the code you won&rsquo;t notice the difference.
Some parts of CensusMapper still utilized SVGs, like the d3-based
<a href="http://doodles.mountainmath.ca/blog/2015/10/24/census-drilldown/">Census Wheel</a>.</p>

<h5>WebGL</h5>

<p><a href="https://en.wikipedia.org/wiki/WebGL">WebGL</a> also draws on a canvas element, but the work is offloaded onto the GPU (graphics processor) giving enormous
speed improvements. Regular canvas rendering is fast enough for our purposes, but with WebGL we can do more complex
renderings that previously we could not even dream of: <a href="https://en.wikipedia.org/wiki/OpenGL_Shading_Language">Shaders</a>
and Interactive 3D data maps. We had previously
<a href="https://mountainmath.ca/census3">toyed with 3D data visualization</a> to explore Vancouver&rsquo;s household density in 3D using Three.js,
but did not pursue this further because of the complexities of writing code for navigating a Canada-wide map. Then we came
across the super-customizable 3D open mapping platform built by <a href="https://mapzen.com/projects/tangram/">Mapzen</a>, and that
suddenly made it extremely easy to do interactive 3D data mapping live in the browser. A quick test
<a href="https://mountainmath.ca/vancouver_lidar/map">using Vancouver&rsquo;s open LIDAR generated building height data</a> showed how easy Mapzen&rsquo;s
tangram engine is to use.</p>

<p>After digging deeper into tangram, and with help from the friendly people at Mapzen, we figured out a way to fit
CensusMapper&rsquo;s two-stage data workflow into tangram&rsquo;s mapping engine. The result are real-time 3D maps where height
and color of each geographic area can be independently (and dynamically) controlled. Here is an example where mouseover
trigged the area west of Coal Harbor to &lsquo;pop up&rsquo;.
<img src="/images/webGL.jpg" alt="webGL" /></p>

<p>At the same time we gain the ability to easily pull in all kinds of other data and map it. On our canvas or svg maps we
added regular image tiles, either a road and label&rsquo;s overlay or a base map (which then requires opacity to be added to
the census data that is mapped on top of that) as orientation aid. Short of baking our own image tiles we have very
little control over the look and feel of this. With Mapzen&rsquo;s tangram we can very easily pick and style individual
geographic objects from Mapzen&rsquo;s OSM vector tile server, resulting in crisp and clear maps. In the above example we
decide dynamically what level of roads to render, how to style them, what labels to display and we also added bodies of
water, where we filter by size depending on the zoom level.</p>

<p>At this stage it is still an ongoing project to get this production-ready. One obvious obstacle is that WebGL browser
support is still lagging. And on top of that it also requires updated graphics card drivers, which is a big problem on
windows machines that are already a couple of years old. So for now we still need to have a plain canvas or svg fallback.</p>

<p>And then there are the details that need to get worked out. 3D maps sounds great, but it will take us some time to figure
out how to best utilize this in thematic maps. But even without utilizing 3D capabilities, the dynamic shaders and increased
rendering performance are already pushing the boundary of what&rsquo;s possible in web maps.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Census Drilldown]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2015/10/24/census-drilldown/"/>
    <updated>2015-10-24T20:45:16-07:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2015/10/24/census-drilldown</id>
    <content type="html"><![CDATA[<h4>Next steps in CensusMapper</h4>

<p>The <a href="http://censusmapper.ca">Census Mapper Project</a> is moving along slowly, public beta unearthed some bugs and we gathered
feedback (thanks to everyone reporting back!). There are still a couple of steps that need to be taken care of before
we can unleash the full map making power to all users. We feel that the complexity of census data requires more guidance
than the current map making system is providing. Anyone who does not mind getting there hands dirty and having to look
up census variable definitions by themselves when making maps is welcome to contact us and we will hook you up with a
beta mapmaking account.</p>

<p>In the meantime we added one important feature to the CensusMapper.</p>

<h5>Content Drilldown</h5>

<p>CensusMapper is a great way to explore single census variables (or a single function built out of census variables)
across many geographic regions and aggregation levels. But sometimes we would like to do the opposite: Drill down into
a specific census region and explore other census variables. We have now added an easy way to do this. To access it
simply select the &ldquo;more&rdquo; button in the basic popup when you select a census region. This brings up the <em>census wheel</em>,
which is our way to navigate through census data.
<img src="/images/wheel.png" alt="Census Wheel" /></p>

<p>Try it out right away on <a href="http://censusmapper.ca">CensusMapper</a> or read on for details on how this works.</p>

<!-- more -->


<p>There are almost 4,000 census variables available, right now we do not offer to split up by gender, which reduces the
available variables to 1,429. To further simplify things we throw out all variables with zero values for the give
geographic area, still leaving a
sizeable number of variables to browse through.
<img src="http://doodles.mountainmath.ca/images/mother_tounge.png" alt="Mother Tounge" style="max-width:400px;margin-right:15px;margin-top:10px;" align="left"/>
Each arc in the census wheel represents a variable, or a category of
variables. Selecting an arc will zoom into that arc and turn it into the &ldquo;center&rdquo; of the wheel, collapsing all other
components. That&rsquo;s the content <em>drilldown</em> process. Once it makes sense to display data as proportions, we switch to the
<em>proportional view</em> which shows the data as hierarchical pie chart.</p>

<p>This gives a visual representation of the proportions of each of the variables. Hovering (or touching) an arc will
display more detailed information, selecting one will drill down further. To reverse that process either select the
center or us the <em>content breadcrumbs</em> at the top that were created during the drilldown process.</p>

<h5>Data Problems</h5>

<p>Census data is messy. Now that all census data for each region is generally accessible in CensusMapper we need to
explain some of the inherent data problems.</p>

<h6>Rounding</h6>

<p>Census Canada will <a href="http://www12.statcan.gc.ca/census-recensement/2011/dp-pd/prof/help-aide/N2.cfm?Lang=E">round</a>
(almost) all data to preserve anonymity and don&rsquo;t create false impressions of accuracy that
the data does not achieve. Data is generally reported in increments of 5, rounding includes randomness to preserve
anonymity. The value of the measured value
is <a href="https://www12.statcan.gc.ca/census-recensement/2011/ref/DQ-QD/conf-eng.cfm">within 4</a> of the reported one. And
remember that even the measured variable is only an estimate of the actual value of the variable.
Rounding may lead to situations where, for example, the sum of all people listed
by age bracket will not add up to the total number of people. Generally, this difference will be small and we ignore it
in our visualization.</p>

<h6>Omitted Data</h6>

<p>Census Canada will at times not report data. This could be due to very low return rates or other problems that make data
so unreliable that it is better not reported at all. Or it could be that releasing the information could compromize
the anonymity of the census data for some people in that area. The latter can take
the form of Census Canada not reporting any data for the region, or Census Canada zeroing out specific variables that
&ldquo;are too low to be reported&rdquo;.
<img src="http://doodles.mountainmath.ca/images/unaccounted.png" alt="Unaccounted" style="max-width:400px;margin-left:15px;margin-top:10px;" align="right"/>
We have not been able to find clear guidelines how the &ldquo;zeroing&rdquo; works, but often this will leave
detectable traces in the data. Looking at the example in the image, looking at &ldquo;Mode of Transport&rdquo; to work only
&ldquo;Driving&rdquo; has non-zero values, the
other options &ldquo;Passenger&rdquo;, &ldquo;Transit&rdquo;, &ldquo;Bike&rdquo;, &ldquo;Walk&rdquo; and &ldquo;Other&rdquo; are all zero. There were 160 people getting to work,
115 are listed as &ldquo;Driver&rdquo;, leaving 45 unaccounted for. This is outside of the range that could be explained by the
rounding of variables. We alert the user by adding in
a grey area for the missing 45. This also ensures that the visual representation remains accurate.</p>

<h6>Multiple Responses</h6>

<p>Some census questions allow for multiple responses. For exaple &ldquo;Language Spoken Most Often At Home&rdquo;. In this particular
case the census variable breaks out single responses and multiple responses and is very transparent to the user. In
other cases, for example &ldquo;Ethnicity&rdquo;, single and multiple responses are not reported separately but responses are all
added up. This leads to the sum of lower level variables being higher than the base variable. We alert the user to this
by overlaying small white dots on the base variable.
<img src="http://doodles.mountainmath.ca/images/multiple_responses.png" alt="Multiple Responses" style="max-width:400px;margin-right:15px;margin-top:10px;" align="left"/>
In this particular case the total for for &ldquo;Ethnic Origin&rdquo; was 12,140 people. But there were 1,430 more responses at the
next level, so up to 1,430 people had given multiple responses to this question listing more than one of the aggregate
(mostly continent level) origins, some possibly listing more than two. The same patter repeats at different ethnic
origin aggregation
levels, for example 2,565 people claimed at least one of the &ldquo;British Island origins&rdquo;, but many listed more than one
resulting in the sum of the individual regions with the British Islands exceeding the British Island count by 1,445.
Again, we alert the user by overlaying dots over the &ldquo;British Island origins&rdquo; arc. Hovering over the arg will display
the exact numbers of the &ldquo;overcounting&rdquo; due to multiple responses.</p>

<p>In these cases where mulitple repsonses are not broken out the dots will aler the user that the proportional
representation in the hierarchical pie chart does not represent proportions out of a total given by the value of the
variable at the centre (or lower level), but as a proportion of all responses which exceeds the value of the
lower level variable.</p>

<h6>Basic Census</h6>

<p>The Basic Census is generally speaking quite reliable, every single person is required to fill it
out and return rates are generally above 95%. Serious problems will only occur if response rates are very low. We alert
the user by shading geographic regions is this has been the case.</p>

<h6>NHS</h6>

<p>The National Household Survey is quite different in nature, it was only
sent out to a smaller portion (~30%) of society and return rates were much lower (~69%). Even with 100% return rates
there are likely to be geographic regions where the results severely misrepresent reality in that region due to sampling
bias. For each region that bias is small, but the probability for bias grows as the number of people in the geographic
region declines. So this is mostly a problem for Dissemination Areas. But even there, the probability of severe sampling
bias in each region is small, but there are many regions and the probability that some of these regions suffer from
sever sampling bias is quite large.</p>

<p>On top of this basic statistical sampling bias, we also have self selection bias due to some deomgraphics being more
likely to return the survey than others. This bias is a product of the decision of scrapping the madatory
&lsquo;long form census&rsquo; and replacing it with the voluntary NHS. The return rates can give some indication of the
likelyhood of self-selection
bias, we shade regions with a non-return rate lower than 50%, the cutoff Census Canada set for reliability of the NHS.
It is especially problematic when trying to detect change in variables (for example poverty) from one census to another
as the differences in the variable over time are often small and similar in magnitude to possible self-selection bias.</p>

<p>The 50% cutoff we highlight in CensusMapper is just a guideline, the exact return rates are displayed on hover or when
selecting regions and should always to be taken into
account when interpreting results,
especially at the Dissemination Area level.</p>

<p>If all this information did not turn you off, head over to <a href="http://censusmapper.ca">CensusMapper</a> and drill down into
some geographic areas.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Census Mapper]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2015/09/28/census-mapper/"/>
    <updated>2015-09-28T09:23:41-07:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2015/09/28/census-mapper</id>
    <content type="html"><![CDATA[<h5>We are excited to announce CensusMapper public beta launch!</h5>

<p>The project on mapping census data for Canada is entering the next stage. We are now mapping 3875 different
variables from the 2011 census, or any combination of them, across 67215 geographic regions covering all of Canada.</p>

<p>We are opening up the <a href="http://censusmapper.ca">Census Mapper</a> to a limited public beta. Limited means that anyone
can view maps created in CensusMapper, but we are only opening up the map creation tools to selected beta users.</p>

<p>Be aware that the web app makes use of modern web technology and renders large amount of data. It will only work on
modern browsers, best viewed in Chrome or Safari. Firefox works ok, Internet Explorer might grind to a halt and should be avoided.</p>

<p><a href="http://censusmapper.ca"><img src="/images/map-tools.jpg" alt="CenusMap Mapmaker" /></a></p>

<p>We are a little restrictive on creating maps right now for the simple reason that census data is somewhat tricky to
understand and at this point we don&rsquo;t have a comprehensive guide explaining all the variables and warning against many
of the pitfalls. We are planning to slowly integrate this and open up the map creation tools to the general public.</p>

<h3>Why CensusMapper?</h3>

<!-- more -->


<p>Census Canada data is extremely rich and useful in many cirumstances, but it is not being widely used. There are many
reasons for this, the somewhat unmanageable amount of data being one of them, the difficulty of accessing and standardizing
the in principle freely available datasets is another.</p>

<p>Census data is inherently geographic in nature, working with the data without proper visualization tools can be challenging
too. And even for people that have good access to the data and that are well-versed in mapping geographic data, it can
still take quite a bit of time to generate maps visualizing the data. CensusMapper greatly speeds up this process by
allowing straightforward mapping of any function derived from census variables through all geographic aggregation levels
Canada wide.</p>

<h3>Storytelling</h3>

<p>Census mapper does more than just mapping census data. It is designed as a storytelling tool. Few maps are so crisp and
clear that they are self-explanatory. A map of population density might fall into that category. But most census variables
are sufficiently complex that maps derived from them warrant narration. We think of CensusMapper as a storytelling tool
that allows &lsquo;readers&rsquo; of the map to interact with it, zoom in, zoom out, pan around, and jump to other maps linked in the
story provided by the mapmaker.</p>

<h3>Directions</h3>

<p>There are many ways to expand on this. On the map creation side we can offer more diverse coloring tools, allowing user
input and user defined map locations to be used in the mapping function, add data from previous census. We could allow
limited upload of user data to be integrated with census data, statistical and spacial analysis tools, custom mapping projects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Hidden Mortgage]]></title>
    <link href="http://doodles.mountainmath.ca/blog/2015/08/25/the-hidden-mortgage/"/>
    <updated>2015-08-25T23:18:12-07:00</updated>
    <id>http://doodles.mountainmath.ca/blog/2015/08/25/the-hidden-mortgage</id>
    <content type="html"><![CDATA[<p>Some months ago I did a little side project and put some Census Canada data for Vancouver
<a href="https://mountainmath.ca/census">on an interactive map</a> online. After it generated quite some interest, to a large part
due to Ian Young&rsquo;s reporting
<a href="http://www.scmp.com/comment/blogs/article/1851003/bizarro-vancouver-25000-households-declare-less-income-they-spend">utilizing some of the data in the South China Morning Post</a>,
I talked to my friend Alejandro and we decided to set up a Census Mapper that allowes laymen to map any census variables
of their choosing Canada wide.</p>

<p>Since this is only a side project, it will take some time to set this up properly. In the meantime, I get to have some
fun to play with census data and map some variables of my choosing.</p>

<p>For a sneak preview of what the Census Mapper will be able to do read below the fold. No interaction, no chosing your
own variables and panning around Canada yet. Just some screenshots with a story to tie them together.</p>

<!-- more -->


<h3>Census Mapper Sneak Preview</h3>

<p>One of my many pet pieves has been the Drive Until You Qualify phrase. The idea is that you buy the house closest to your
place of work for which the bank will aprrove a loan. The obvious problem with this is that your commuting costs will
go up the further away from work you live &ndash; and you disposable income goes down accordingly. But the bank does not
seem to be bothered by that at all and often does not get much attention by househunting families either.</p>

<p>The fix? Easy. The cost of commuting and housing should not be separated by viewed in concert with one another.
People househunting right will have to do this based on their individual parameters, but let&rsquo;s take a look at what
choices people have made in the past based on Census Canada&rsquo;s 2011 NHS data.</p>

<h4>Dwelling Value</h4>

<p>In mapping terms, let&rsquo;s start with the map of Median Dwelling Values around Vancouver, taken from the NHS. Although
a little dated, it still serves to make the basic point.</p>

<p><img src="/images/dwelling_value.jpg" alt="&quot;Median Dwelling Value&quot;" /></p>

<p>The image is the familiar one, homes are expensive on the west side, a little less so toward the east. In Vancouver
proper the downtown area is somewhat affordable with prices dipping below $300,000 for the median dwelling. We are
considering the whole range, one bedroom condos all the way up to single family homes.</p>

<h4>Commute Time</h4>

<p>Next up, how much time to these people spend commuting? The NHS got you covered.</p>

<p><img src="/images/commute_time.jpg" alt="&quot;Median One Way Commute Time&quot;" /></p>

<p>The median one-way commute time give us a picture of how much time people spend to go to work. And we will assume they
spend the same time coming back.</p>

<p>How much does it cost to commute. We will think of the commute cost as being made up of two components. The money
spent to get to and from work and the dollar value of the time. That leaves us with two more questions. How much money
do people spent and how much is their time worth.</p>

<h4>Transportation Cost</h4>

<p>Luckily, again the NHS has something to say about this. To figure out the money spent on the commute we look at the mode
of transport. NHS tell us how many people drive, are passengers, take transit, cycle or walk to work. To keep things
simple we will compute the &lsquo;median commute cost&rsquo; by setting transit cost at $120 per month (roughly the price for a
2-zone transit pass) and for driving we set the car2go rate of 41c/min (which is quite generous, most people will spent
more if they own a car, and pay for gas, insurance, parking themselves and spent time to maintain it). For simplicit we
set the cost for passengers, cyclists and pedestrians at zero. So we sum over the number of drivers and transit users
and divide by the total number of commuters in each dissemination area to estimate that cost. Generally speaking it
turns out to be much smaller than the &lsquo;time cost&rsquo; calculated next.</p>

<h4>Time Cost</h4>

<p>To compute the &lsquo;time cost&rsquo; of commuting for the average person in each dissemination area we need to know what people&rsquo;s
time is worth. The NHS has a simple answer for that, the Median After Tax Household Income.</p>

<p><img src="/images/median_after_tax_income.jpg" alt="&quot;Median After Tax Household Income&quot;" /></p>

<p>We estimate the median annual time cost of the commute by taking the ratio of the daily commute time to the daily work time,
assumed to be eight hours, and multiplying it by the annual after tax income. That&rsquo;s more or less the money the average
person in that dissemination area makes in the time the person spent commuting. If there are several people in the
household contributing to the income, there will be several people spending time
commuting, so that effect roughly cancels out.</p>

<h4>Annual Commute Cost</h4>

<p>Putting it together we get the annual cost of the commute map.</p>

<p><img src="/images/commute_cost.jpg" alt="&quot;Annual Cost of Commute&quot;" /></p>

<p>This is only an estimate. From a technical perspective we probably should have been working with averages instead of
median values, but the result is very similar. Translating between time and money is inherintly tricky, most people can&rsquo;t
easily scale up or down the time they spent working to translate time into money. The easiest way to think of this is
someone who tries to work less hours (and get less pay) in order to spend more time with their family. One way to do
exactly that is to cut down on commute time.</p>

<h4>The Hidden Mortgage</h4>

<p>Now it&rsquo;s time to tie this back up with the price for housing. After all, the time you spent on your commute and your
mode choice for that commute, are intimately tied to where you choose to live. How do we combine the commute cost with
the housing cost?
As a rule of thumb, one makes $400 monthly payments for each $100,000 of mortgage. Give or take, but our numbers are
quite rough anyway. So taking the annual commute cost, dividing by 400 and multiplying by 100,000 we get the &lsquo;commute
cost mortgage equivalent&rsquo;. If we map it it looks the same as the previous map, just with different labels. But since I
like maps, here it is.</p>

<p><img src="/images/commute_mortgage_equivalent.jpg" alt="&quot;Commute Mortgage Equivalent&quot;" /></p>

<p>In other words, we translated the commute cost into &lsquo;hidden mortgage&rsquo; payments. Except, unlike a real mortgage, paying
it off does not generate any value for you.</p>

<h4>Combined Dwelling Value and Commute Cost</h4>

<p>Finally we have all we need for the end result. The Combined Dwelling Value and Commute Time/Mode Value Map where we
simply add the estimated commute mortgage cost onto the dwelling value.</p>

<p><img src="/images/combined_dwelling_commute.jpg" alt="&quot;Combined Dwelling Value And Commute Cost&quot;" /></p>

<p>It does not look radically different from the dwelling value map. It&rsquo;s almost the same around downtown where commute
time tends to be low and more expensive further out, where the &lsquo;hidden mortgage&rsquo; of commute time can add up to half a
million dollars.</p>

<p>Using Census Data can only help illustrate the hidden mortgage that people are already paying. It can only highlight
some general trends and ideas, it cannot make any statement about particular individual households, nor can the genral
reasoning used to derive the numbers apply to everyone. Or maybe even most people. The estimates are quite rough, likely
underestimating commute costs for drivers, not taking into account the well understood health benefits of active
transportation nor the negative health implications of driving. The commute time to money computation is very rough
and will have to be adjusted if applied to real-world examples. But this is only meant to illustrate ageneral point.</p>

<p>The takeaway should be that the &lsquo;hidden mortgage&rsquo; is real, and it&rsquo;s huge. And often overlooked.</p>
]]></content>
  </entry>
  
</feed>
